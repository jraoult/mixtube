@import 'variables';
@import 'utils';
@import 'modals';
@import 'notifications';
@import 'header';

html {
  height: 100%;

  font-size: $baseFontSizeUnitless * 1px;
  font-family: 'Open Sans', sans-serif;
  font-weight: 300;
  color: $lightTextColor;
}

body {
  height: 100%;

  background-color: $black;

  line-height: $lineHeight;
}

.mt-queue-loading__message {
  margin-bottom: $unitVerticalPadding;
}

.mt-queue-loading__progress {
  progress {
    @extend %mt-chromeless-progress;
    @include mt-spinner(4rem, $contrastedColor);
  }

}

.mt-app {
  position: relative;
  height: 100%;

  display: flex;
  flex-direction: column;
}

.mt-scene {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.mt-scene__element-host {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;

  // players and wrappers might do some "weird" stuff by appending iframe
  // we want to make sure the opacity value is inherited by the whole DOM subtree
  iframe {
    opacity: inherit;
  }
  //
  //  background-image: url(../../mock-video.png);
  //  background-size: cover;
  //  background-repeat: no-repeat;
  //  background-position: center;
  //  background-color: #000000;
}

.mt-body {
  position: relative;
  flex: 1;

  // use flex here only to leverage the align items stretch behavior for children so that they fill the height
  display: flex;
}

@mixin coming-next {

  .mt-coming-next__group {
    padding-bottom: $unitVerticalPadding / 2;

    &.next {
      font-weight: 600;
    }

    &:last-child {
      padding-bottom: 0;
    }
  }

  .mt-coming-next__header {
    font-size: 0.875rem;
  }

  .mt-coming-next__title {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

@mixin queue {

  .mt-queue {
    width: 100%;

    overflow-x: hidden; // needed by FF sometimes
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    background-color: $darkestBgColor;

    @include mt-media-large-screen {
      width: (100%/$columnsCount);
    }

    &.mt-queue__animation-show {

      &.ng-hide-add, &.ng-hide-remove {
        transition-property: transform, opacity;
        transition-duration: $baseTransitionDuration;
        transition-timing-function: $easeInOut, linear;

        // needed by the transition
        display: block !important;
      }

      &.ng-hide {
        opacity: 0;
        transform: translateX(-50%);
      }
    }
  }

  .mt-queue__entry {
    @include queue-item-color($baseBgColor);
    overflow: hidden;

    &.active {
      @include queue-item-color($contrastedColor);
    }

    &.broken {
      @include queue-item-color($errorBgColor);
    }
  }

  .mt-queue__entry__thumbnail {
    @extend %mt-chromeless-button;
    display: block;
    position: relative;
    width: 100%;

    > .image {
      @include mt-fluid-image(.4);
      filter: saturate(5%);
    }

    .mt-queue__entry.active & {
      > .image {
        filter: none;
      }
    }
  }

  .mt-queue__entry__broken-message {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;

    display: none; // hidden by default
    align-items: center;
    justify-content: center;
    text-align: center;

    background-color: rgba($errorBgColor, $overlayOpacity);

    .mt-queue__entry.broken & {
      display: flex;
    }
  }

  .mt-queue__entry__progress {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;

    progress {
      @extend %mt-chromeless-progress;
      @include mt-spinner(3rem, $contrastedColor);
    }
  }

  .mt-queue__entry__data {
    position: relative;

    display: flex;

    // decorative up arrow
    &:before {
      content: '';
      position: absolute;
      bottom: 100%;
      left: 2rem;

      @include triangle(1.25rem, $baseBgColor, up);
    }
  }

  .mt-queue__entry__title {
    flex: 1;
    align-self: center;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    padding: $unitVerticalPadding/2 .5rem;
  }

  .mt-queue__entry__commands {
    align-self: stretch;

    display: flex;
    align-items: stretch;
  }

  .mt-queue__entry__remove-button {
    @extend %mt-chromeless-button;
    @include mt-click-reaction;
    padding: 0 .5rem;

    opacity: .1;
    font-size: 2.5rem;

    .mt-mouse-based-interaction &:hover {
      opacity: 1;
    }
  }
}

@mixin queue-item-color($bgColor) {
  background-color: $bgColor;

  .mt-queue__entry__data:before {
    @include triangle(1.25rem, $bgColor, up);
  }
}

@mixin search {

  $headerFontSize: 1.25rem;
  $resultsHorizontalPadding: .5rem;

  .mt-search {
    // right aligned so that in large screen mode the search keeps its position even when the queue is hidden
    @include position(absolute, 0px 0px 0px null);
    width: 100%;

    background-color: rgba($secondaryBgColor, .8);
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    @include mt-media-large-screen {
      width: (3 * 100%/$columnsCount); // width is 3 "columns" out of 4
    }

    &.mt-search__animation-show {

      &.ng-hide-add, &.ng-hide-remove {
        transition-property: transform, opacity;
        transition-duration: $baseTransitionDuration;
        transition-timing-function: $easeInOut, linear;

        // don't hide it straight: wait for the end of the animation
        display: block !important;
      }

      &.ng-hide {
        transform: translateY(-50%);
        opacity: 0;
      }
    }
  }

  .mt-search__provider {
    margin: 1rem 1rem 0 1rem;
  }

  .mt-search__provider__header {

    margin-bottom: $unitVerticalPadding / 2;
    padding: 0 $resultsHorizontalPadding;

    > .title {
      display: inline-block;

      font-size: $headerFontSize;
    }

    .progress {
      display: inline-block;

      progress {
        @extend %mt-chromeless-progress;
        @include mt-spinner($headerFontSize, $lightTextColor);
      }
    }
  }

  .mt-search__no-results-message {
    padding: 0 $resultsHorizontalPadding;
  }

  .mt-results {
    @include clearfix;

    .mt-result {
      width: 100%;

      // more than 1 item per line when more space is available
      @include mt-media-large-screen {
        $resultsColumnsCount: 3;
        width: 100% / $resultsColumnsCount;
      }
    }
  }

  .mt-result {
    float: left;
    padding: 0 $resultsHorizontalPadding $unitVerticalPadding $resultsHorizontalPadding;
    vertical-align: top;
  }

  .mt-result__container {
    @extend %mt-chromeless-button;
    position: relative;
    display: block;
    width: 100%;

    text-align: inherit;
    border-radius: 2px;
    overflow: hidden;
  }

  .mt-result__add-affordance {
    position: absolute;
    top: 0;
    right: 0;
    overflow: visible;
    @include triangle(3rem, rgba($baseBgColor, $overlayOpacity), up-right);
    z-index: 1;

    &:before {
      position: absolute;
      content: '\e803';
      bottom: .80rem;
      right: .5rem;

      color: $lightTextColor;
      opacity: .8;
      font-size: 1.5rem;
      font-family: fontello;
    }

    // activate ":hover" styles only on mouse based interactions device because they don't behave well on mobile (the hover
    // state remains after a tap until the next tap)
    .mt-mouse-based-interaction .mt-result__container:hover &:before {
      color: $contrastedColor;
      opacity: 1;
    }
  }

  .mt-result__thumbnail {
    position: relative;
    overflow: hidden;
  }

  .mt-result__thumbnail__img {
    @include mt-fluid-image(.5625);

    filter: saturate(100%);

    &.mt-loading {
      opacity: 0;
      filter: saturate(0);
    }

    &.mt-loading-remove {
      transition-property: opacity, filter;
      transition-duration: $baseTransitionDuration * 2.5, $baseTransitionDuration * 5;
    }
  }

  .mt-result__added-confirmation {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    z-index: 2;
    transform: translate3d(0, 0, 0); // use 3D here to avoid animation flickering in webkit

    background-color: $baseBgColor;
    border-radius: 2px 2px 0 0;

    // vertically center the text
    display: flex;
    flex-direction: column;
    justify-content: center;

    > .text {
      padding: .25rem;
      text-align: center;
      overflow: hidden;

      // a very "cheap" element query to display a shorter confirmation message on larger screen when the search result screen
      // is made of 5 columns which doesn't give much place to the message
      @include mt-media-large-screen {

        font-size: (14rem/$baseFontSizeUnitless);

        &:before {
          content: attr(mt-short-text);
        }

        > .mt-replaced-text {
          display: none;
        }
      }
    }

    &.mt-result__added-confirmation__animation-if {

      &.ng-enter, &.ng-leave {
        transition-property: transform, opacity;
        transition-duration: $baseTransitionDuration;
        transition-timing-function: $easeInOut, linear;
      }

      &.ng-enter, &.ng-leave.ng-leave-active {
        transform: translate3d(-100%, 0, 0);
        opacity: .5;
      }

      &.ng-leave, &.ng-enter.ng-enter-active {
        transform: translate3d(0, 0, 0);
        opacity: 1;
      }
    }
  }

  .mt-result__data {
    position: absolute;
    bottom: 0;
    width: 100%;
    padding: $unitVerticalPadding/4 .5rem;

    color: $lightTextColor;
    background: rgba(0, 0, 0, .3);

    .mt-result__data__item {
      overflow: hidden;

      white-space: nowrap;
      text-overflow: ellipsis;

      &.head {
        display: flex;
        align-items: baseline;
      }
    }

    .mt-result__data__title {
      flex: 1;

      overflow: hidden;
      text-overflow: ellipsis;
      font-size: (14rem/16);
      font-weight: 600;
    }

    .mt-result__data__publisher {
      font-size: (13rem/16);
    }

    .mt-result__data__duration {
      padding-left: 1em;
      font-size: (12rem/16);
    }
  }
}

// includes imported modules styles
@include utils;
@include modals;
@include notifications;
@include header;
@include coming-next;
@include queue;
@include search;
