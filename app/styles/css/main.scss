@import 'variables';
@import 'utils';
@import 'modals';
@import 'notifications';
@import 'coming-next';
@import 'header';
@import 'scene';
@import 'queue';
@import 'search';

html {
  height: 100%;

  font-size: $baseFontSizeUnitless * 1px;
  font-family: 'Open Sans', sans-serif;
  font-weight: 300;
  color: $lightTextColor;
}

body {
  height: 100%;

  background-color: $black;

  line-height: $lineHeight;
}

.mt-queue-loading__message {
  margin-bottom: $unitVerticalPadding;
}

.mt-queue-loading__progress {
  progress {
    @extend %mt-chromeless-progress;
    @include mt-spinner(4rem, $contrastedColor);
  }
}

.mt-main-tile {
  height: 100%;

  display: flex;
  flex-direction: column;
}

.mt-header-tile {
  position: relative;
  height: 4rem;
}

.mt-body-tile {
  position: relative;
  flex: 1;
  overflow: hidden;

  display: flex;
  flex-direction: column;
}

.mt-scene-tile {
  position: relative;

  &:before {
    content: '';
    display: block;
    padding-top: 56.25%; /* 16/9eme*/
  }
}

.mt-notification-center-tile {
  @include position(absolute, 0px 0px 0px 0px);
  z-index: 3;
  pointer-events: none;

  mt-notification-center {
    // revert the behaviour to make notifications clickable
    pointer-events: auto;
  }

  // if the available size is larger than the minimum notification size stop expansion
  // could have been done with width + min-width but FF doesn't behave like the others
//  @media screen and (min-width: $notificationsNominalWidth) {
//    width: $notificationsNominalWidth;
//  }
}

.mt-queue-tile {
  position: relative;
  flex: 1;

  &.animation-show-hide {

    &.ng-hide-add, &.ng-hide-remove {
      transition-property: transform, opacity;
      transition-duration: $baseTransitionDuration;
      transition-timing-function: $easeInOut, linear;

      // needed by the transition
      display: block !important;
    }

    &.ng-hide {
      opacity: 0;
      transform: translateX(-50%);
    }
  }
}

.mt-search-tile {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;

  &.animation-show-hide {

    &.ng-hide-add, &.ng-hide-remove {
      transition-property: transform, opacity;
      transition-duration: $baseTransitionDuration;

      transition-timing-function: $easeInOut, linear;

      // don't hide it straight: wait for the end of the animation
      display: block !important;
    }

    &.ng-hide {
      transform: translateY(-50%);
      opacity: 0;
    }
  }
}

// includes imported modules styles
@include utils;
@include modals;
@include notifications;
@include coming-next;
@include header;
@include scene;
@include queue;
@include search;
