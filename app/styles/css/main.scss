@import '../vendor/bourbon/bourbon';
@import 'variables';
@import 'utils';
@import 'modals';
@import 'notifications';
@import 'coming-next';
@import 'header';
@import 'scene';
@import 'queue';
@import 'search';

html {
  height: 100%;

  font-size: $baseFontSizeUnitless * 1px;
  font-family: 'Open Sans', sans-serif;
  font-weight: 300;
  color: $lightTextColor;
}

body {
  height: 100%;

  background-color: $black;

  line-height: $lineHeight;

  &.idle {
    cursor: none;
  }
}

@mixin queue-loading {
  .mt-queue-loading__message {
    margin-bottom: $unitVerticalPadding;
  }

  .mt-queue-loading__progress {
    progress {
      @extend %mt-chromeless-progress;
      @include mt-spinner(4rem, $contrastedColor);
    }
  }
}

@mixin tiles {
  $headerHeight: 4rem;

  .mt-main-tile {
    height: 100%;

    display: flex;
    flex-direction: column;
  }

  .mt-header-tile {
    position: relative;
    height: 4rem;
  }

  .mt-body-tile {
    position: relative;
    flex: 1;

    display: flex;
    flex-direction: column;
  }

  .mt-scene-tile {
    position: relative;

    &:before {
      content: '';
      display: block;
      padding-top: 56.25%; /* 16/9eme*/
    }

    @include mt-horizontal-screen {
      // in horizontal mode we move the scene underneath the header
      @include position(absolute, -$headerHeight 0px 0px 0px);

      &:before {
        display: none;
      }
    }
  }

  .mt-notification-center-tile {
    $notificationsNominalWidth: 30rem;

    @include position(absolute, 0px 0px auto auto);
    width: 100%;
    max-width: $notificationsNominalWidth;
    max-height: 100%;
    overflow: hidden;

    z-index: 3;

    mt-notification-center {
      // reverts the behaviour to make notifications clickable
      pointer-events: auto;
    }
  }

  .mt-queue-tile {
    position: relative;
    flex: 1;

    @include mt-horizontal-screen {
      position: absolute;
      width: 25%;
      height: 100%;

      transition-property: transform, opacity;
      transition-duration: $baseTransitionDuration;
      transition-timing-function: $easeInOut, linear;

      &.idle {
        opacity: 0;
        transform: translateX(-100%);
      }
    }
  }

  .mt-search-tile {
    @include position(absolute, 0px 0px 0px 0px);

    @include mt-horizontal-screen {
      width: 75%;
      left: auto;
    }

    &.animation-show-hide {

      &.ng-hide-add, &.ng-hide-remove {
        transition-property: transform, opacity;
        transition-duration: $baseTransitionDuration;

        transition-timing-function: $easeInOut, linear;

        // don't hide it straight: wait for the end of the animation
        display: block !important;
      }

      &.ng-hide {
        transform: translateY(-50%);
        opacity: 0;
      }
    }
  }
}

@include queue-loading;
@include tiles;

// includes imported modules styles
@include utils;
@include modals;
@include notifications;
@include coming-next;
@include header;
@include scene;
@include queue;
@include search;
