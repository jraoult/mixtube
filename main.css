.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

.mt-search-input__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  background: transparent;
  outline: none; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit;
  overflow: hidden; }

body, p, ul, li {
  margin: 0;
  padding: 0; }

h1, h2, h3 {
  margin: 0;
  font: inherit; }

a {
  color: inherit;
  text-decoration: inherit; }

html {
  height: 100%;
  font: 16px/24px "Open Sans", sans-serif;
  font-weight: 300;
  color: rgba(255, 255, 255, 0.87); }

body {
  height: 100%;
  background-color: #0c0c0d;
  line-height: 24px; }
  body.idle {
    cursor: none; }

.mt-queue-loading__message {
  margin-bottom: 24px; }

.mt-queue-loading__spinner {
  height: 96px;
  color: #8fc346; }

.mt-main-tile {
  height: 100%;
  display: flex;
  flex-direction: column; }

.mt-header-tile {
  position: relative;
  height: 56px;
  overflow: visible;
  z-index: 30; }

.mt-body-tile {
  position: relative;
  flex: 1;
  overflow: visible;
  display: flex;
  flex-direction: column; }

.mt-scene-tile {
  position: relative;
  z-index: 10;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.16), 0 2px 10px rgba(0, 0, 0, 0.12); }
  .mt-scene-tile:before {
    content: '';
    display: block;
    padding-top: 56.25%;
    /* 16/9eme*/ }
  @media screen and (min-width: 550px) {
    .mt-scene-tile {
      position: absolute;
      top: -56px;
      right: 0px;
      bottom: 0px;
      left: 0px;
      z-index: 0;
      box-shadow: none; }
      .mt-scene-tile:before {
        display: none; } }

.mt-notification-center-tile {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: auto;
  left: auto;
  width: 100%;
  max-width: 400px;
  max-height: 100%;
  overflow: visible;
  z-index: 30; }
  .mt-notification-center-tile mt-notification-center {
    pointer-events: auto; }

.mt-queue-tile {
  position: relative;
  flex: 1;
  z-index: 0;
  box-shadow: none; }
  @media screen and (min-width: 550px) {
    .mt-queue-tile {
      position: absolute;
      width: 320px;
      height: 100%;
      z-index: 20;
      box-shadow: 0 8px 17px rgba(0, 0, 0, 0.2), 0 6px 20px rgba(0, 0, 0, 0.19);
      transition-property: transform, opacity;
      transition-duration: 200ms;
      transition-timing-function: cubic-bezier(0.8, 0, 0.2, 1), linear; }
      .mt-queue-tile.idle {
        opacity: 0;
        transform: translateX(-100%); } }

.mt-search-tile {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  z-index: 20; }
  @media screen and (min-width: 550px) {
    .mt-search-tile {
      width: calc(100% - 320px);
      left: auto;
      z-index: 10; } }
  .mt-search-tile.animation-show-hide.ng-hide-add-active, .mt-search-tile.animation-show-hide.ng-hide-remove-active {
    transition-duration: 200ms;
    transition-property: transform, opacity;
    transition-timing-function: cubic-bezier(0.8, 0, 0.2, 1), linear; }
  .mt-search-tile.animation-show-hide.ng-hide {
    transform: translateY(-50%);
    opacity: 0; }

[role=button] {
  cursor: pointer;
  outline: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0); }
  [role=button][aria-disabled=true] {
    cursor: none;
    pointer-events: none; }

@keyframes mt-spinner-rotation {
  to {
    transform: rotate(1turn); } }

mt-smart-img {
  display: block;
  position: relative; }
  mt-smart-img .mt-smart-img__image {
    background-repeat: no-repeat;
    background-position: center; }
  mt-smart-img.fill-crop .mt-smart-img__image {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    background-size: cover; }

.mt-smart-img__loading-indicator-container {
  position: absolute;
  width: 100%;
  top: 0;
  bottom: 0; }

mt-spinner {
  display: block; }

.mt-spinner__svg {
  display: block;
  fill: currentColor;
  animation: mt-spinner-rotation 500ms infinite linear; }

.mt-svg-icon {
  display: inline-block;
  height: 32px;
  width: 32px;
  fill: currentColor;
  stroke: currentColor; }

.mt-animation-enter-leave__fade.ng-enter, .mt-animation-enter-leave__fade.ng-leave {
  transition: opacity 200ms linear; }

.mt-animation-enter-leave__fade.ng-enter, .mt-animation-enter-leave__fade.ng-leave.ng-leave-active {
  opacity: 0; }

.mt-animation-enter-leave__fade.ng-leave, .mt-animation-enter-leave__fade.ng-enter.ng-enter-active {
  opacity: 1; }

.mt-backdrop {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  z-index: 49;
  background-color: rgba(12, 12, 13, 0.85); }

.mt-modal {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  z-index: 50;
  overflow: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; }
  .mt-modal.ng-enter, .mt-modal.ng-leave {
    transition-property: opacity, transform;
    transition-duration: 200ms;
    transition-timing-function: linear, cubic-bezier(0.8, 0, 0.2, 1); }
  .mt-modal.ng-enter {
    opacity: 0;
    transform: translateY(-25%); }
  .mt-modal.ng-enter.ng-enter-active {
    opacity: 1;
    transform: translateY(0); }
  .mt-modal.ng-leave {
    opacity: 1;
    transform: translateY(0); }
  .mt-modal.ng-leave.ng-leave-active {
    opacity: 0;
    transform: translateY(-25%); }

.mt-modal__container {
  max-height: 100%;
  max-width: 550px;
  padding: 8px;
  overflow: visible;
  display: flex;
  flex-direction: column; }

.mt-modal__frame {
  background-color: #fafafa;
  border-radius: 2px;
  color: black;
  box-shadow: 0 27px 24px rgba(0, 0, 0, 0.2), 0 40px 77px rgba(0, 0, 0, 0.22);
  display: flex;
  flex-direction: column; }

.mt-modal__title {
  flex: none;
  padding: 0 24px;
  margin: 24px 0;
  color: #313135;
  font: 24px/32px "Open Sans", sans-serif;
  font-weight: 700;
  text-align: center; }

.mt-modal__content {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  text-align: justify; }

.mt-modal__content__wrapper {
  padding: 0 24px; }

.mt-modal__content__paragraph {
  margin-bottom: 24px; }

.mt-modal__content__sub {
  font: 13px/20px "Open Sans", sans-serif; }

.mt-modal__commands {
  flex: none;
  display: flex;
  justify-content: flex-end; }

.mt-modal__button {
  margin: 8px;
  line-height: 40px;
  min-width: 64px;
  padding: 0 8px;
  color: rgba(255, 255, 255, 0.87);
  font-weight: 700;
  text-align: center;
  background-color: #8fc346;
  border-radius: 2px; }
  .mt-modal__button.ng-click-active {
    transform: scale(0.9); }
  .mt-modal__button.secondary {
    border: 1px solid #8fc346;
    background-color: transparent; }

.mt-modal__link {
  text-decoration: underline; }

.mt-queue-loading__message {
  margin-bottom: 24px; }

.mt-queue-loading__spinner {
  height: 96px;
  color: #8fc346; }

.mt-notifications-center__container {
  overflow: visible; }

.mt-notifications-center__container__padding {
  padding: 0 8px;
  margin-top: 8px;
  overflow: visible; }

.mt-notification {
  background-color: rgba(250, 250, 250, 0.85);
  color: black;
  border-radius: 2px;
  box-shadow: 0 27px 24px rgba(0, 0, 0, 0.2), 0 40px 77px rgba(0, 0, 0, 0.22); }
  .mt-notification.error {
    background-color: rgba(182, 57, 37, 0.85);
    color: rgba(255, 255, 255, 0.87); }

.mt-notification__content {
  position: relative;
  display: flex;
  font: 13px/20px "Open Sans", sans-serif; }

.mt-notification__text {
  padding: 0 16px;
  margin: 16px 0;
  flex: 1; }

.mt-notification__thumbnail {
  padding-right: 8px;
  margin-top: 8px; }

.mt-notification__image {
  width: 80px;
  height: 80px;
  background-size: cover;
  background-repeat: no-repeat; }

.mt-coming-next__group.next {
  font-weight: bold; }

.mt-coming-next__group:first-child {
  margin-top: 8px;
  padding-bottom: 16px; }

.mt-coming-next__header {
  font: 13px/20px "Open Sans", sans-serif;
  color: rgba(0, 0, 0, 0.7); }

.mt-coming-next__title {
  white-space: nowrap;
  text-overflow: ellipsis; }

.mt-header {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  z-index: 1;
  overflow: visible; }

.mt-header__bg {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  background-color: #313135;
  box-shadow: 0 12px 15px rgba(0, 0, 0, 0.24), 0 17px 50px rgba(0, 0, 0, 0.19); }
  @media screen and (min-width: 550px) {
    .mt-header__bg {
      transition-property: transform, opacity;
      transition-duration: 200ms;
      transition-timing-function: cubic-bezier(0.8, 0, 0.2, 1), linear; }
      .mt-header__bg.idle {
        opacity: 0;
        transform: translateY(-50%); } }

.mt-header__container {
  height: 100%;
  width: 100%;
  position: relative;
  display: flex;
  align-items: center; }
  .mt-header__container > .start {
    flex: 1;
    display: flex; }
  .mt-header__container > .end {
    flex: 1; }
  .mt-header__container > .floating {
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: auto;
    display: flex;
    align-items: center; }

.mt-header__app-title {
  line-height: 0;
  padding: 0 16px; }

.mt-header__playback-button {
  position: relative; }
  .mt-header__playback-button .facet {
    display: flex; }
    .mt-header__playback-button .facet:not(:first-child) {
      position: absolute;
      top: 0; }
  .mt-header__playback-button .facet__animation-toggle {
    transform: scale(0.5);
    opacity: 0;
    transition-duration: 200ms;
    transition-property: transform, opacity;
    transition-timing-function: cubic-bezier(0.8, 0, 0.2, 1), linear; }
    .mt-header__playback-button .facet__animation-toggle.toggle {
      transform: scale(1);
      opacity: 1; }

.mt-search-input__button {
  position: relative;
  margin-right: 16px;
  z-index: 1; }
  .mt-search-input__button .facet {
    display: flex; }
    .mt-search-input__button .facet:not(:first-child) {
      position: absolute;
      top: 0;
      right: 0; }
  .mt-search-input__button .facet__animation-toggle {
    transform: scale(0.5);
    opacity: 0;
    transition-duration: 200ms;
    transition-property: transform, opacity;
    transition-timing-function: cubic-bezier(0.8, 0, 0.2, 1), linear; }
    .mt-search-input__button .facet__animation-toggle.toggle {
      transform: scale(1);
      opacity: 1; }

.mt-search-input {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: auto;
  max-width: 550px;
  padding: 0 48px 0 8px;
  color: rgba(255, 255, 255, 0.87);
  display: flex;
  align-items: center; }

.mt-search-input__field {
  position: relative;
  height: 100%;
  width: 100%;
  padding: 0;
  z-index: 1;
  background-color: #4a4a4f;
  font: inherit;
  color: inherit; }
  .mt-search-input__field::-webkit-input-placeholder {
    color: #A9A9A9;
    text-overflow: clip;
    white-space: nowrap; }
  .mt-search-input__field::-moz-placeholder {
    color: #A9A9A9;
    text-overflow: clip;
    white-space: nowrap; }
  .mt-search-input__field:-ms-input-placeholder {
    color: #A9A9A9;
    text-overflow: clip;
    white-space: nowrap; }
  .mt-search-input__field::placeholder {
    color: #A9A9A9;
    text-overflow: clip;
    white-space: nowrap; }

.mt-search-input__fake-field {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  padding: 0 48px 0 8px;
  background-color: #4a4a4f;
  display: flex;
  align-items: center; }
  .mt-search-input__fake-field.empty:before {
    content: attr(data-mt-placeholder);
    color: #A9A9A9;
    text-overflow: clip;
    white-space: nowrap; }

.mt-search-input__fake-field__text {
  display: inline-block; }

.mt-scene {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px; }
  .mt-scene:after {
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    content: '';
    display: block; }

.mt-scene__element-host {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px; }
  .mt-scene__element-host iframe {
    opacity: inherit; }

.mt-queue {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  background-color: #19191a; }

.mt-queue__entry {
  background-color: #313135; }
  .mt-queue__entry .mt-queue__entry__data:before {
    content: '';
    position: absolute;
    bottom: 100%;
    left: 16px;
    height: 0;
    width: 0;
    border-bottom: 12px solid #313135;
    border-left: 12px solid transparent;
    border-right: 12px solid transparent; }
  .mt-queue__entry.active {
    background-color: #8fc346; }
    .mt-queue__entry.active .mt-queue__entry__data:before {
      content: '';
      position: absolute;
      bottom: 100%;
      left: 16px;
      height: 0;
      width: 0;
      border-bottom: 12px solid #8fc346;
      border-left: 12px solid transparent;
      border-right: 12px solid transparent; }
  .mt-queue__entry.broken {
    background-color: #b63925; }
    .mt-queue__entry.broken .mt-queue__entry__data:before {
      content: '';
      position: absolute;
      bottom: 100%;
      left: 16px;
      height: 0;
      width: 0;
      border-bottom: 12px solid #b63925;
      border-left: 12px solid transparent;
      border-right: 12px solid transparent; }

.mt-queue__entry__thumbnail {
  position: relative; }
  .mt-queue__entry__thumbnail > .image {
    padding-top: 40%;
    background-size: cover;
    background-position: center;
    -webkit-filter: saturate(5%);
            filter: saturate(5%); }
    @media screen and (min-width: 550px) {
      .mt-queue__entry__thumbnail > .image {
        padding-top: 0;
        height: 128px; } }
  .mt-queue__entry.active .mt-queue__entry__thumbnail > .image {
    -webkit-filter: none;
            filter: none; }

.mt-queue__entry__broken-message {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  display: none;
  -ms-grid-row-align: center;
      align-items: center;
  justify-content: center;
  text-align: center;
  background-color: rgba(182, 57, 37, 0.85); }
  .mt-queue__entry.broken .mt-queue__entry__broken-message {
    display: flex; }

.mt-queue__entry__spinner-container {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  display: flex;
  align-items: center;
  justify-content: center; }

.mt-queue__entry__spinner {
  width: 64px;
  color: #8fc346; }

.mt-queue__entry__data {
  position: relative;
  overflow: visible;
  display: flex; }

.mt-queue__entry__title {
  flex: 1;
  align-self: center;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding: 0 16px;
  margin: 12px 0; }

.mt-queue__entry__commands {
  display: flex;
  align-items: center; }

.mt-queue__entry__remove-button {
  padding-right: 8px;
  opacity: .2;
  will-change: opacity;
  display: flex; }
  .mt-queue__entry__remove-button.ng-click-active {
    transform: scale(0.9); }
  @media (any-hover: hover) {
    .mt-queue__entry__remove-button:hover {
      opacity: 1; } }

.mt-search {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  background-color: rgba(74, 74, 79, 0.8);
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch; }

.mt-search__provider__header {
  padding: 0 8px;
  margin: 16px 0;
  display: flex;
  align-items: center; }

.mt-search__provider__header__spinner {
  display: inline-block;
  height: 16px;
  width: 16px;
  margin-left: 8px; }

.mt-search__message {
  padding: 0 8px; }

.mt-search__message__padding {
  padding-bottom: 16px; }

.mt-results {
  padding-left: 8px; }

.mt-js-results:before {
  display: none;
  content: '{"promotedCount": 1, "regularCount": 1}'; }

.mt-result {
  float: left;
  margin-bottom: 8px;
  padding-right: 8px;
  vertical-align: top;
  width: 100%; }

.mt-result__container {
  position: relative;
  margin: 0 auto;
  text-align: inherit; }

@media screen and (min-width: 550px) {
  .mt-js-results:before {
    content: '{"promotedCount": 1, "regularCount": 1}'; }
  .mt-result {
    width: 100%; }
  .mt-result__container {
    max-width: 320px; }
  .mt-result__thumbnail {
    height: 180px;
    padding-top: 0; }
  .mt-results__page:first-child .mt-result:nth-child(-n + 1) {
    width: 100%; } }

@media screen and (min-width: 656px) {
  .mt-js-results:before {
    content: '{"promotedCount": 2, "regularCount": 3}'; }
  .mt-result {
    width: 33.33333%; }
  .mt-result__container {
    max-width: 320px; }
  .mt-result__thumbnail {
    height: 180px;
    padding-top: 0; }
  .mt-results__page:first-child .mt-result:nth-child(-n + 2) {
    width: 50%; } }

@media screen and (min-width: 984px) {
  .mt-js-results:before {
    content: '{"promotedCount": 3, "regularCount": 4}'; }
  .mt-result {
    width: 25%; }
  .mt-result__container {
    max-width: 320px; }
  .mt-result__thumbnail {
    height: 180px;
    padding-top: 0; }
  .mt-results__page:first-child .mt-result:nth-child(-n + 3) {
    width: 33.33333%; } }

@media screen and (min-width: 1312px) {
  .mt-js-results:before {
    content: '{"promotedCount": 4, "regularCount": 6}'; }
  .mt-result {
    width: 16.66667%; }
  .mt-result__container {
    max-width: 320px; }
  .mt-result__thumbnail {
    height: 180px;
    padding-top: 0; }
  .mt-results__page:first-child .mt-result:nth-child(-n + 4) {
    width: 25%; } }

@media screen and (min-width: 1640px) {
  .mt-js-results:before {
    content: '{"promotedCount": 5, "regularCount": 7}'; }
  .mt-result {
    width: 14.28571%; }
  .mt-result__container {
    max-width: 320px; }
  .mt-result__thumbnail {
    height: 180px;
    padding-top: 0; }
  .mt-results__page:first-child .mt-result:nth-child(-n + 5) {
    width: 20%; } }

.mt-result__thumbnail {
  position: relative;
  padding-top: 56.25%;
  background-color: #313135; }
  .mt-result__thumbnail:after {
    content: '';
    display: block;
    position: absolute;
    top: 45px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    background: linear-gradient(to bottom, transparent 0%, rgba(0, 0, 0, 0.7) 70%, rgba(0, 0, 0, 0.7) 100%); }

.mt-result__thumbnail__img {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px; }
  .mt-result__thumbnail__img .mt-smart-img__image {
    -webkit-filter: saturate(100%);
            filter: saturate(100%); }
    .mt-result__thumbnail__img .mt-smart-img__image.mt-loading {
      opacity: 0;
      -webkit-filter: saturate(0);
              filter: saturate(0); }
    .mt-result__thumbnail__img .mt-smart-img__image.mt-loading-remove {
      transition-property: opacity, -webkit-filter;
      transition-property: opacity, filter;
      transition-property: opacity, filter, -webkit-filter;
      transition-duration: 1000ms, 2000ms; }
  .mt-result__thumbnail__img .loading-indicator {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgba(255, 255, 255, 0.54); }

.mt-result__added-confirmation {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
  z-index: 2;
  transform: translate3d(0, 0, 0);
  background-color: #313135;
  display: flex;
  flex-direction: column;
  justify-content: center; }
  .mt-result__added-confirmation > .text {
    padding: 8px;
    text-align: center; }
    @media screen and (min-width: 550px) {
      .mt-result__added-confirmation > .text {
        font: 13px/20px "Open Sans", sans-serif; }
        .mt-result__added-confirmation > .text:before {
          content: attr(mt-short-text); }
        .mt-result__added-confirmation > .text > .mt-replaced-text {
          display: none; } }
  .mt-result__added-confirmation.mt-result__added-confirmation__animation-if.ng-enter, .mt-result__added-confirmation.mt-result__added-confirmation__animation-if.ng-leave {
    transition-property: transform, opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.8, 0, 0.2, 1), linear; }
  .mt-result__added-confirmation.mt-result__added-confirmation__animation-if.ng-enter, .mt-result__added-confirmation.mt-result__added-confirmation__animation-if.ng-leave.ng-leave-active {
    transform: translate3d(-100%, 0, 0);
    opacity: .5; }
  .mt-result__added-confirmation.mt-result__added-confirmation__animation-if.ng-leave, .mt-result__added-confirmation.mt-result__added-confirmation__animation-if.ng-enter.ng-enter-active {
    transform: translate3d(0, 0, 0);
    opacity: 1; }

.mt-result__data {
  position: absolute;
  bottom: 0;
  width: 100%;
  padding: 16px; }

.mt-result__data__item {
  white-space: nowrap;
  text-overflow: ellipsis; }
  .mt-result__data__item.head {
    display: flex;
    align-items: baseline; }

.mt-result__data__title {
  flex: 1;
  text-overflow: ellipsis;
  font: 13px/20px "Open Sans", sans-serif;
  font-weight: 600; }

.mt-result__data__publisher {
  font: 13px/20px "Open Sans", sans-serif; }

.mt-result__data__duration {
  width: 6ch;
  font: 13px/20px "Open Sans", sans-serif;
  text-align: right; }

.mt-search__show-more {
  padding: 0 8px;
  margin-bottom: 8px;
  display: flex; }
  @media screen and (min-width: 550px) {
    .mt-search__show-more {
      justify-content: flex-end; } }

.mt-search__show-more__button {
  width: 100%;
  background-color: #19191a;
  text-align: center;
  padding: 0 8px;
  line-height: 40px;
  border-radius: 2px;
  display: flex;
  justify-content: center; }
  @media screen and (min-width: 550px) {
    .mt-search__show-more__button {
      width: auto; } }
  @media (any-hover: hover) {
    .mt-search__show-more__button:hover .text {
      color: #8fc346; } }

.mt-search__show-more__button__label {
  overflow: visible;
  padding: 0 24px;
  display: flex;
  align-items: center; }
  .mt-search__show-more__button__label .loader {
    width: 0;
    overflow: visible; }

.mt-search__show-more__spinner {
  width: 16px;
  height: 16px;
  margin-left: 8px; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl91dGlscy5zY3NzIiwiX2Jhc2Uuc2NzcyIsIl92YXJpYWJsZXMuc2NzcyIsIl9xdWV1ZS1sb2FkaW5nLnNjc3MiLCJtYWluLnNjc3MiLCIuLi8uLi8uLi8uLi9idWlsZC9ub2RlX21vZHVsZXMvbm9kZS1ib3VyYm9uL25vZGVfbW9kdWxlcy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYWRkb25zL19wb3NpdGlvbi5zY3NzIiwibWFpbi5jc3MiLCJfbW9kYWxzLWJhc2Uuc2NzcyIsIl9tb2RhbHMuc2NzcyIsIl9ub3RpZmljYXRpb25zLnNjc3MiLCJfY29taW5nLW5leHQuc2NzcyIsIl9oZWFkZXIuc2NzcyIsIl9zY2VuZS5zY3NzIiwiX3F1ZXVlLnNjc3MiLCIuLi8uLi8uLi8uLi9idWlsZC9ub2RlX21vZHVsZXMvbm9kZS1ib3VyYm9uL25vZGVfbW9kdWxlcy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYWRkb25zL190cmlhbmdsZS5zY3NzIiwiX3NlYXJjaC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlGQTtFQUNFLHlCQUFpQjtLQUFqQixzQkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYix3QkFBd0I7RUFDeEIsY0FBYyxFQUNmOztBQUxEO0VBQ0UseUJBQWlCO0tBQWpCLHNCQUFpQjtVQUFqQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHdCQUF3QjtFQUN4QixjQUFjLEVBQ2Y7O0FBTEQ7RUFDRSx5QkFBaUI7S0FBakIsc0JBQWlCO1VBQWpCLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2Isd0JBQXdCO0VBQ3hCLGNBQWMsRUFDZjs7QUFMRDtFQUNFLHlCQUFpQjtLQUFqQixzQkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYix3QkFBd0I7RUFDeEIsY0FBYyxFQUNmOztBQUxEO0VBQ0UseUJBQWlCO0tBQWpCLHNCQUFpQjtVQUFqQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHdCQUF3QjtFQUN4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QztRQWpDSDtVQTBCUSw2QkFBYSxFQUNkO1FBM0JQO1VBOEJRLGNBQWMsRUFDZixFQUFBO0VBL0JQO0lBc0NNLHdDQUF3QztJQUN4QywyQmJySW1CO0lhc0luQixpRUFBZ0UsRUFDakU7RUF6Q0w7SUE0Q00sb0NBQXNCO0lBQ3RCLFlBQVksRUFDYjtFQTlDTDtJQWlETSxnQ0FBc0I7SUFDdEIsV0FBVyxFQUNaOztBQUlMO0VBQ0UsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixZQUFZO0VBQ1osY0FBVSxFQUdYOztBQUVEO0VBQ0Usb0JBQW9CO0VBQ3BCLHdCQUF3QixFQU16QjtFQVJEO0lBS0ksY0FBYztJQUNkLHNCQUFzQixFQUN2Qjs7QUFHSDtFQUNFLFFBQVE7RUFFUix3QkFBd0I7RUFDeEIsd0NickxpQztFYXNMakMsaUJBQWlCLEVBQ2xCOztBQUVEO0VBQ0Usd0NiMUxpQyxFYTJMbEM7O0FBRUQ7RUFDRSxXQUFXO0VBQ1gsd0NiL0xpQztFYWdNakMsa0JBQWtCLEVBQ25COztBQUVEO0VBQ0UsZWJqTlc7RWFrTlgsbUJibE5XO0Vhb05YLGNBQWMsRUFLZjtFZjNHRDtJZWtHQTtNQU9JLDBCQUEwQixFQUU3QixFQUFBOztBQUVEO0VBQ0UsWUFBWTtFQUNaLDBCYi9MYztFYWdNZCxtQkFBbUI7RUFDbkIsZWIvTlc7RWFnT1gsa0JBQWM7RUFFZCxtQmIvTWU7RWFpTmYsY0FBYztFQUNkLHdCQUF3QixFQVd6QjtFZmxJRDtJZTZHQTtNQWFJLFlBQVksRUFRZixFQUFBO0VBTEM7SUFoQkY7TUFrQk0sZWIxTVUsRWEyTVgsRUFBQTs7QUFJTDtFQUNFLGtCQUFrQjtFQUNsQixnQkFBWTtFQUVaLGNBQWM7RUFDZCxvQkFBb0IsRUFNckI7RUFYRDtJQVFJLFNBQVM7SUFDVCxrQkFBa0IsRUFDbkI7O0FBR0g7RUFDRSxZQUFRO0VBQ1IsYUFBUztFQUNULGlCYmxRVyxFYW1RWiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5cbkBtaXhpbiB1dGlscyB7XG5cbiAgW3JvbGU9YnV0dG9uXSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xuXG4gICAgJlthcmlhLWRpc2FibGVkPXRydWVdIHtcbiAgICAgIGN1cnNvcjogbm9uZTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIH1cbiAgfVxuXG4gIEBrZXlmcmFtZXMgbXQtc3Bpbm5lci1yb3RhdGlvbiB7XG4gICAgdG8ge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMXR1cm4pO1xuICAgIH1cbiAgfVxuXG4gIG10LXNtYXJ0LWltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgLm10LXNtYXJ0LWltZ19faW1hZ2Uge1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICB9XG5cbiAgICAmLmZpbGwtY3JvcCAubXQtc21hcnQtaW1nX19pbWFnZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICByaWdodDogMDtcbiAgICAgIGxlZnQ6IDA7XG5cbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgfVxuICB9XG5cbiAgLm10LXNtYXJ0LWltZ19fbG9hZGluZy1pbmRpY2F0b3ItY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbiAgfVxuXG4gIG10LXNwaW5uZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLm10LXNwaW5uZXJfX3N2ZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG5cbiAgICBhbmltYXRpb246IG10LXNwaW5uZXItcm90YXRpb24gNTAwbXMgaW5maW5pdGUgbGluZWFyO1xuICB9XG5cbiAgLy90b2RvIG5lZWQgdG8gcmV2aXNpdCB0aGlzIFNWRyB0aGluZ1xuICAubXQtc3ZnLWljb24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDQgKiAkZ3JpZC1zaXplO1xuICAgIHdpZHRoOiA0ICogJGdyaWQtc2l6ZTtcblxuICAgIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgICBzdHJva2U6IGN1cnJlbnRDb2xvcjtcbiAgfVxuXG4gIC5tdC1hbmltYXRpb24tZW50ZXItbGVhdmVfX2ZhZGUge1xuXG4gICAgJi5uZy1lbnRlciwgJi5uZy1sZWF2ZSB7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR0cmFuc2l0aW9uLWR1cmF0aW9uIGxpbmVhcjtcbiAgICB9XG5cbiAgICAmLm5nLWVudGVyLFxuICAgICYubmctbGVhdmUubmctbGVhdmUtYWN0aXZlIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgJi5uZy1sZWF2ZSxcbiAgICAmLm5nLWVudGVyLm5nLWVudGVyLWFjdGl2ZSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxufVxuXG4lbXQtY2hyb21lbGVzcy1pbnB1dCB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbkBtaXhpbiBtdC1jbGljay1yZWFjdGlvbiB7XG4gICYubmctY2xpY2stYWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKC45KTtcbiAgfVxufVxuXG4vLyBleHRyYWN0ZWQgc2V0dGluZ3MgZm9yIHBsYWNlaG9sZGVyIHNvIHRoYXQgd2UgY2FuIHNpbXVsYXRlIHBsYWNlaG9sZGVycyB3aXRoIHJlZ3VsYXIgZWxlbWVudFxuQG1peGluIG10LXBsYWNlaG9sZGVyKCRjb2xvcjogI0E5QTlBOSkge1xuICBjb2xvcjogJGNvbG9yO1xuICB0ZXh0LW92ZXJmbG93OiBjbGlwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG5AbWl4aW4gbXQtaG9yaXpvbnRhbC1zY3JlZW4ge1xuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkd2lkdGgtYnJlYWtwb2ludC1zaW5nbGUtY29sdW1uLWxheW91dCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIHNoYWRvdyBnZW5lcmF0aW9uXG4vLyBjb3BpZWQgYW5kIGFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vbXJtbG5jL21hdGVyaWFsLXNoYWRvd3NcbkBmdW5jdGlvbiB6LWRlcHRoLXRvcCgkZGVwdGg6IDEpIHtcbiAgJGNvbG9yOiAgICAuMTIsIC4xOSwgLjE5LCAuMjEsIC4yMjtcbiAgJG9mZnNldC15OiAycHgsIDZweCwgMTdweCwgMjVweCwgNDBweDtcbiAgJGJsdXI6ICAgICAxMHB4LCAyMHB4LCA1MHB4LCA1NXB4LCA3N3B4O1xuXG4gIEByZXR1cm4gMCBudGgoJG9mZnNldC15LCAkZGVwdGgpIG50aCgkYmx1ciwgJGRlcHRoKSByZ2JhKCRjb2xvci1zaGFkb3csIG50aCgkY29sb3IsICRkZXB0aCkpO1xufVxuXG5AbWl4aW4gei1kZXB0aC10b3AoJGRlcHRoOiAxKSB7XG4gIGJveC1zaGFkb3c6IHotZGVwdGgtdG9wKCRkZXB0aCk7XG59XG5cbkBmdW5jdGlvbiB6LWRlcHRoLWJvdHRvbSgkZGVwdGg6IDEpIHtcbiAgJGNvbG9yOiAgICAuMTYsIC4yLCAuMjQsIC4yMiwgLjI7XG4gICRvZmZzZXQteTogMnB4LCA4cHgsIDEycHgsIDE2cHgsIDI3cHg7XG4gICRibHVyOiAgICAgNXB4LCAxN3B4LCAxNXB4LCAyOHB4LCAyNHB4O1xuXG4gIEByZXR1cm4gMCBudGgoJG9mZnNldC15LCAkZGVwdGgpIG50aCgkYmx1ciwgJGRlcHRoKSByZ2JhKCRjb2xvci1zaGFkb3csIG50aCgkY29sb3IsICRkZXB0aCkpO1xufVxuXG5AbWl4aW4gei1kZXB0aC1ib3R0b20oJGRlcHRoOiAxKSB7XG4gIEBpZiAkZGVwdGggPT0gMCB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgfVxuICBAZWxzZSB7XG4gICAgYm94LXNoYWRvdzogei1kZXB0aC1ib3R0b20oJGRlcHRoKTtcbiAgfVxufVxuXG5AbWl4aW4gei1kZXB0aCgkZGVwdGg6IDEpIHtcbiAgQGlmICRkZXB0aCA9PSAwIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICB9XG4gIEBlbHNlIHtcbiAgICBib3gtc2hhZG93OiB6LWRlcHRoLWJvdHRvbSgkZGVwdGgpLCB6LWRlcHRoLXRvcCgkZGVwdGgpO1xuICB9XG59IiwiQGltcG9ydCAndmFyaWFibGVzJztcblxuQG1peGluIGJhc2Uge1xuXG4gIGh0bWwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICAqLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gICAgYm94LXNpemluZzogaW5oZXJpdDtcblxuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cblxuICBib2R5LCBwLCB1bCwgbGkge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgaDEsIGgyLCBoMyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQ6IGluaGVyaXQ7XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XG4gIH1cblxuICBodG1sIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBmb250OiAkZm9udC1ib2R5O1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgY29sb3I6ICRjb2xvci10ZXh0O1xuICB9XG5cbiAgYm9keSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWJhY2tncm91bmQ7XG5cbiAgICBsaW5lLWhlaWdodDogMyAqICRncmlkLXNpemU7XG5cbiAgICAmLmlkbGUge1xuICAgICAgY3Vyc29yOiBub25lO1xuICAgIH1cbiAgfVxufSIsIiRncmlkLXNpemU6IDhweDtcblxuXG4vLyBiYXNlZCBvbiBZVCBkZWZhdWx0IHRodW1ibmFpbCB3aWR0aFxuJHdpZHRoLXRodW1ibmFpbC1vcmlnaW5hbDogMzIwcHg7XG4kaGVpZ2h0LXRodW1ibmFpbC1vcmlnaW5hbDogMTgwcHg7XG4kcmF0aW8tdGh1bWJuYWlsOiAxMDAlICogJGhlaWdodC10aHVtYm5haWwtb3JpZ2luYWwgLyAkd2lkdGgtdGh1bWJuYWlsLW9yaWdpbmFsO1xuXG5cbiR3aWR0aC1icmVha3BvaW50LXNpbmdsZS1jb2x1bW4tbGF5b3V0OiA1NTBweDtcbiR3aWR0aC1xdWV1ZS10aWxlOiAkd2lkdGgtdGh1bWJuYWlsLW9yaWdpbmFsO1xuXG5cbiRmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XG4kZm9udC1ib2R5OiAxNnB4LzI0cHggJGZvbnQtZmFtaWx5O1xuJGZvbnQtc21hbGxlcjogMTNweC8yMHB4ICRmb250LWZhbWlseTtcbiRmb250LWJpZ2dlcjogMjRweC8zMnB4ICRmb250LWZhbWlseTtcblxuXG4kYm9yZGVyLXJhZGl1czogMnB4O1xuXG5cbiR0cmFuc2l0aW9uLWR1cmF0aW9uOiAyMDBtcztcbiR0aW1pbmctZnVuY3Rpb24tZWFzZS1pbi1vdXQ6IGN1YmljLWJlemllciguOCwgMCwgLjIsIDEpO1xuXG5cbiRvcGFjaXR5LXJhdGlvLW92ZXJsYXk6IC44NTtcblxuXG4kY29sb3ItYmFja2dyb3VuZDogaHNsKDI0MCwgMyUsIDUlKTtcbiRjb2xvci1kYXJrZXI6IGhzbCgyNDAsIDMlLCAxMCUpO1xuJGNvbG9yLXByaW1hcnk6IGhzbCgyNDAsIDMlLCAyMCUpO1xuJGNvbG9yLWxpZ2h0ZXI6IGhzbCgyNDAsIDMlLCAzMCUpO1xuJGNvbG9yLWNvbnRyYXN0OiBoc2woMjQwLCAzJSwgOTglKTtcblxuJGNvbG9yLWFjY2VudDogaHNsKDg1LCA1MSUsIDUyJSk7XG4kY29sb3ItYWNjZW50LWVycm9yOiBoc2woOCwgNjYlLCA0MyUpO1xuXG4kY29sb3ItdGV4dDogaHNsYSgwLCAwJSwgMTAwJSwgLjg3KTtcbiRjb2xvci10ZXh0LXNlY29uZGFyeTogaHNsYSgwLCAwJSwgMTAwJSwgLjU0KTtcbiRjb2xvci10ZXh0LWJsYWNrLXRleHQ6IGhzbCgwLCAwJSwgMCUpO1xuJGNvbG9yLXRleHQtYmxhY2stc2Vjb25kYXJ5OiBoc2xhKDAsIDAlLCAwJSwgLjcpO1xuXG4kY29sb3Itc2hhZG93OiBibGFjaztcblxuXG4kZGVwdGgtZGlhbG9nOiA1O1xuJGRlcHRoLWhlYWRlcjogMztcbiRkZXB0aC1ub3RpZmljYXRpb25zOiAzO1xuJGRlcHRoLXNlYXJjaDogMjtcbiRkZXB0aC1zY2VuZTogMTtcbiRkZXB0aC1xdWV1ZTogMDtcblxuJGRlcHRoLXF1ZXVlLWhvcml6b250YWw6IDI7XG4kZGVwdGgtc2VhcmNoLWhvcml6b250YWw6IDE7XG4kZGVwdGgtc2NlbmUtaG9yaXpvbnRhbDogMDtcbiIsIkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICd1dGlscyc7XG5cbkBtaXhpbiBxdWV1ZS1sb2FkaW5nIHtcblxuICAubXQtcXVldWUtbG9hZGluZ19fbWVzc2FnZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMyAqICRncmlkLXNpemU7XG4gIH1cblxuICAubXQtcXVldWUtbG9hZGluZ19fc3Bpbm5lciB7XG4gICAgaGVpZ2h0OiAxMiAqICRncmlkLXNpemU7XG5cbiAgICBjb2xvcjogJGNvbG9yLWFjY2VudDtcbiAgfVxufSIsIkBpbXBvcnQgJ2JvdXJib24nO1xuXG5AaW1wb3J0ICd2YXJpYWJsZXMnO1xuQGltcG9ydCAndXRpbHMnO1xuQGltcG9ydCAnYmFzZSc7XG5AaW1wb3J0ICdxdWV1ZS1sb2FkaW5nJztcbkBpbXBvcnQgJ21vZGFscy1iYXNlJztcbkBpbXBvcnQgJ21vZGFscyc7XG5AaW1wb3J0ICdub3RpZmljYXRpb25zJztcbkBpbXBvcnQgJ2NvbWluZy1uZXh0JztcbkBpbXBvcnQgJ2hlYWRlcic7XG5AaW1wb3J0ICdzY2VuZSc7XG5AaW1wb3J0ICdxdWV1ZSc7XG5AaW1wb3J0ICdzZWFyY2gnO1xuXG5AbWl4aW4gdGlsZXMge1xuXG4gICRoZWlnaHQtaGVhZGVyOiA3ICogJGdyaWQtc2l6ZTtcbiAgJHdpZHRoLW5vbWluYWwtbm90aWZpY2F0aW9uczogNDgwcHg7XG5cbiAgLm10LW1haW4tdGlsZSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgLm10LWhlYWRlci10aWxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAkaGVpZ2h0LWhlYWRlcjtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcblxuICAgIHotaW5kZXg6IDEwICogJGRlcHRoLWhlYWRlcjtcbiAgfVxuXG4gIC5tdC1ib2R5LXRpbGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmbGV4OiAxO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvLyBsZXRzIHNob3cgdGhlIHZpZGVvIHVuZGVyIHRoZSBoZWFkZXIgaW4gaG9yaXpvbnRhbCBtb2RlXG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAubXQtc2NlbmUtdGlsZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgei1pbmRleDogMTAgKiAkZGVwdGgtc2NlbmU7XG4gICAgQGluY2x1ZGUgei1kZXB0aCgkZGVwdGgtc2NlbmUpO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmctdG9wOiA1Ni4yNSU7IC8qIDE2LzllbWUqL1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG10LWhvcml6b250YWwtc2NyZWVuKCkge1xuICAgICAgLy8gaW4gaG9yaXpvbnRhbCBtb2RlIHdlIG1vdmUgdGhlIHNjZW5lIHVuZGVybmVhdGggdGhlIGhlYWRlclxuICAgICAgQGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsIC0kaGVpZ2h0LWhlYWRlciAwcHggMHB4IDBweCk7XG5cbiAgICAgIHotaW5kZXg6IDEwICogJGRlcHRoLXNjZW5lLWhvcml6b250YWw7XG4gICAgICBAaW5jbHVkZSB6LWRlcHRoKCRkZXB0aC1zY2VuZS1ob3Jpem9udGFsKTtcblxuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tdC1ub3RpZmljYXRpb24tY2VudGVyLXRpbGUge1xuICAgIEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAwcHggMHB4IGF1dG8gYXV0byk7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA1MCAqICRncmlkLXNpemU7XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcblxuICAgIHotaW5kZXg6IDEwICogJGRlcHRoLW5vdGlmaWNhdGlvbnM7XG5cbiAgICBtdC1ub3RpZmljYXRpb24tY2VudGVyIHtcbiAgICAgIC8vIHJldmVydHMgdGhlIGJlaGF2aW91ciB0byBtYWtlIG5vdGlmaWNhdGlvbnMgY2xpY2thYmxlXG4gICAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICB9XG4gIH1cblxuICAubXQtcXVldWUtdGlsZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZsZXg6IDE7XG5cbiAgICB6LWluZGV4OiAxMCAqICRkZXB0aC1xdWV1ZTtcbiAgICBAaW5jbHVkZSB6LWRlcHRoKCRkZXB0aC1xdWV1ZSk7XG5cbiAgICBAaW5jbHVkZSBtdC1ob3Jpem9udGFsLXNjcmVlbigpIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAkd2lkdGgtcXVldWUtdGlsZTtcbiAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgei1pbmRleDogMTAgKiAkZGVwdGgtcXVldWUtaG9yaXpvbnRhbDtcbiAgICAgIEBpbmNsdWRlIHotZGVwdGgoJGRlcHRoLXF1ZXVlLWhvcml6b250YWwpO1xuXG4gICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbjtcbiAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkdGltaW5nLWZ1bmN0aW9uLWVhc2UtaW4tb3V0LCBsaW5lYXI7XG5cbiAgICAgICYuaWRsZSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm10LXNlYXJjaC10aWxlIHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcblxuICAgIHotaW5kZXg6IDEwICogJGRlcHRoLXNlYXJjaDtcblxuICAgIEBpbmNsdWRlIG10LWhvcml6b250YWwtc2NyZWVuKCkge1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtICN7JHdpZHRoLXF1ZXVlLXRpbGV9KTtcbiAgICAgIGxlZnQ6IGF1dG87XG4gICAgICB6LWluZGV4OiAxMCAqICRkZXB0aC1zZWFyY2gtaG9yaXpvbnRhbDtcbiAgICB9XG5cbiAgICAmLmFuaW1hdGlvbi1zaG93LWhpZGUge1xuICAgICAgJi5uZy1oaWRlLWFkZC1hY3RpdmUsXG4gICAgICAmLm5nLWhpZGUtcmVtb3ZlLWFjdGl2ZSB7XG4gICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246ICR0cmFuc2l0aW9uLWR1cmF0aW9uO1xuICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkdGltaW5nLWZ1bmN0aW9uLWVhc2UtaW4tb3V0LCBsaW5lYXI7XG4gICAgICB9XG5cbiAgICAgICYubmctaGlkZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQGluY2x1ZGUgYmFzZSgpO1xuQGluY2x1ZGUgcXVldWUtbG9hZGluZygpO1xuQGluY2x1ZGUgdGlsZXMoKTtcblxuLy8gaW5jbHVkZXMgaW1wb3J0ZWQgbW9kdWxlcyBzdHlsZXNcbkBpbmNsdWRlIHV0aWxzKCk7XG5AaW5jbHVkZSBtb2RhbHMtYmFzZSgpO1xuQGluY2x1ZGUgbW9kYWxzKCk7XG5AaW5jbHVkZSBxdWV1ZS1sb2FkaW5nKCk7XG5AaW5jbHVkZSBub3RpZmljYXRpb25zKCk7XG5AaW5jbHVkZSBjb21pbmctbmV4dCgpO1xuQGluY2x1ZGUgaGVhZGVyKCk7XG5AaW5jbHVkZSBzY2VuZSgpO1xuQGluY2x1ZGUgcXVldWUoKTtcbkBpbmNsdWRlIHNlYXJjaCgpO1xuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gUHJvdmlkZXMgYSBxdWljayBtZXRob2QgZm9yIHNldHRpbmcgYW4gZWxlbWVudOKAmXMgcG9zaXRpb24uIFVzZSBhIGBudWxsYCB2YWx1ZSB0byDigJxza2lw4oCdIGEgc2lkZS5cbi8vL1xuLy8vIEBwYXJhbSB7UG9zaXRpb259ICRwb3NpdGlvbiBbcmVsYXRpdmVdXG4vLy8gICBBIENTUyBwb3NpdGlvbiB2YWx1ZVxuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAkY29vcmRpbmF0ZXMgW251bGwgbnVsbCBudWxsIG51bGxdXG4vLy8gICBMaXN0IG9mIHZhbHVlcyB0aGF0IGNvcnJlc3BvbmQgdG8gdGhlIDQtdmFsdWUgc3ludGF4IGZvciB0aGUgZWRnZXMgb2YgYSBib3hcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMCBudWxsIG51bGwgMTBlbSk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGxlZnQ6IDEwZW07XG4vLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vLyAgICAgdG9wOiAwO1xuLy8vICAgfVxuLy8vXG4vLy8gQHJlcXVpcmUge2Z1bmN0aW9ufSBpcy1sZW5ndGhcbi8vLyBAcmVxdWlyZSB7ZnVuY3Rpb259IHVucGFja1xuXG5AbWl4aW4gcG9zaXRpb24oJHBvc2l0aW9uOiByZWxhdGl2ZSwgJGNvb3JkaW5hdGVzOiBudWxsIG51bGwgbnVsbCBudWxsKSB7XG4gIEBpZiB0eXBlLW9mKCRwb3NpdGlvbikgPT0gbGlzdCB7XG4gICAgJGNvb3JkaW5hdGVzOiAkcG9zaXRpb247XG4gICAgJHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICRjb29yZGluYXRlczogdW5wYWNrKCRjb29yZGluYXRlcyk7XG5cbiAgJG9mZnNldHM6IChcbiAgICB0b3A6ICAgIG50aCgkY29vcmRpbmF0ZXMsIDEpLFxuICAgIHJpZ2h0OiAgbnRoKCRjb29yZGluYXRlcywgMiksXG4gICAgYm90dG9tOiBudGgoJGNvb3JkaW5hdGVzLCAzKSxcbiAgICBsZWZ0OiAgIG50aCgkY29vcmRpbmF0ZXMsIDQpXG4gICk7XG5cbiAgcG9zaXRpb246ICRwb3NpdGlvbjtcblxuICBAZWFjaCAkb2Zmc2V0LCAkdmFsdWUgaW4gJG9mZnNldHMge1xuICAgIEBpZiBpcy1sZW5ndGgoJHZhbHVlKSB7XG4gICAgICAjeyRvZmZzZXR9OiAkdmFsdWU7XG4gICAgfVxuICB9XG59XG4iLCIubXQtc2VhcmNoLWlucHV0X19maWVsZCB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIG91dGxpbmU6IG5vbmU7IH1cblxuLm10LXNlYXJjaC1pbnB1dF9fZmllbGQge1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBvdXRsaW5lOiBub25lOyB9XG5cbi5tdC1zZWFyY2gtaW5wdXRfX2ZpZWxkIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgb3V0bGluZTogbm9uZTsgfVxuXG4ubXQtc2VhcmNoLWlucHV0X19maWVsZCB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIG91dGxpbmU6IG5vbmU7IH1cblxuLm10LXNlYXJjaC1pbnB1dF9fZmllbGQge1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBvdXRsaW5lOiBub25lOyB9XG5cbi5tdC1zZWFyY2gtaW5wdXRfX2ZpZWxkIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgb3V0bGluZTogbm9uZTsgfVxuXG4ubXQtc2VhcmNoLWlucHV0X19maWVsZCB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIG91dGxpbmU6IG5vbmU7IH1cblxuLm10LXNlYXJjaC1pbnB1dF9fZmllbGQge1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBvdXRsaW5lOiBub25lOyB9XG5cbi5tdC1zZWFyY2gtaW5wdXRfX2ZpZWxkIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgb3V0bGluZTogbm9uZTsgfVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuYm9keSwgcCwgdWwsIGxpIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbmgxLCBoMiwgaDMge1xuICBtYXJnaW46IDA7XG4gIGZvbnQ6IGluaGVyaXQ7IH1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7IH1cblxuaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgZm9udDogMTZweC8yNHB4IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODcpOyB9XG5cbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwYzBjMGQ7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4OyB9XG4gIGJvZHkuaWRsZSB7XG4gICAgY3Vyc29yOiBub25lOyB9XG5cbi5tdC1xdWV1ZS1sb2FkaW5nX19tZXNzYWdlIHtcbiAgbWFyZ2luLWJvdHRvbTogMjRweDsgfVxuXG4ubXQtcXVldWUtbG9hZGluZ19fc3Bpbm5lciB7XG4gIGhlaWdodDogOTZweDtcbiAgY29sb3I6ICM4ZmMzNDY7IH1cblxuLm10LW1haW4tdGlsZSB7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4ubXQtaGVhZGVyLXRpbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogNTZweDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHotaW5kZXg6IDMwOyB9XG5cbi5tdC1ib2R5LXRpbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsZXg6IDE7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG5cbi5tdC1zY2VuZS10aWxlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxMDtcbiAgYm94LXNoYWRvdzogMCAycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuICAubXQtc2NlbmUtdGlsZTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmctdG9wOiA1Ni4yNSU7XG4gICAgLyogMTYvOWVtZSovIH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgICAubXQtc2NlbmUtdGlsZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC01NnB4O1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICAgIGJvdHRvbTogMHB4O1xuICAgICAgbGVmdDogMHB4O1xuICAgICAgei1pbmRleDogMDtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgICAgIC5tdC1zY2VuZS10aWxlOmJlZm9yZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ubXQtbm90aWZpY2F0aW9uLWNlbnRlci10aWxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiBhdXRvO1xuICBsZWZ0OiBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWF4LWhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHotaW5kZXg6IDMwOyB9XG4gIC5tdC1ub3RpZmljYXRpb24tY2VudGVyLXRpbGUgbXQtbm90aWZpY2F0aW9uLWNlbnRlciB7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87IH1cblxuLm10LXF1ZXVlLXRpbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsZXg6IDE7XG4gIHotaW5kZXg6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgICAubXQtcXVldWUtdGlsZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMzIwcHg7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB6LWluZGV4OiAyMDtcbiAgICAgIGJveC1zaGFkb3c6IDAgOHB4IDE3cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDZweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xOSk7XG4gICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAyMDBtcztcbiAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC44LCAwLCAwLjIsIDEpLCBsaW5lYXI7IH1cbiAgICAgIC5tdC1xdWV1ZS10aWxlLmlkbGUge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpOyB9IH1cblxuLm10LXNlYXJjaC10aWxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgei1pbmRleDogMjA7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgICAubXQtc2VhcmNoLXRpbGUge1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDMyMHB4KTtcbiAgICAgIGxlZnQ6IGF1dG87XG4gICAgICB6LWluZGV4OiAxMDsgfSB9XG4gIC5tdC1zZWFyY2gtdGlsZS5hbmltYXRpb24tc2hvdy1oaWRlLm5nLWhpZGUtYWRkLWFjdGl2ZSwgLm10LXNlYXJjaC10aWxlLmFuaW1hdGlvbi1zaG93LWhpZGUubmctaGlkZS1yZW1vdmUtYWN0aXZlIHtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAyMDBtcztcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjgsIDAsIDAuMiwgMSksIGxpbmVhcjsgfVxuICAubXQtc2VhcmNoLXRpbGUuYW5pbWF0aW9uLXNob3ctaGlkZS5uZy1oaWRlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgb3BhY2l0eTogMDsgfVxuXG5bcm9sZT1idXR0b25dIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDApOyB9XG4gIFtyb2xlPWJ1dHRvbl1bYXJpYS1kaXNhYmxlZD10cnVlXSB7XG4gICAgY3Vyc29yOiBub25lO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG5cbkBrZXlmcmFtZXMgbXQtc3Bpbm5lci1yb3RhdGlvbiB7XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxdHVybik7IH0gfVxuXG5tdC1zbWFydC1pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIG10LXNtYXJ0LWltZyAubXQtc21hcnQtaW1nX19pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7IH1cbiAgbXQtc21hcnQtaW1nLmZpbGwtY3JvcCAubXQtc21hcnQtaW1nX19pbWFnZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG5cbi5tdC1zbWFydC1pbWdfX2xvYWRpbmctaW5kaWNhdG9yLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwOyB9XG5cbm10LXNwaW5uZXIge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubXQtc3Bpbm5lcl9fc3ZnIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgYW5pbWF0aW9uOiBtdC1zcGlubmVyLXJvdGF0aW9uIDUwMG1zIGluZmluaXRlIGxpbmVhcjsgfVxuXG4ubXQtc3ZnLWljb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMzJweDtcbiAgd2lkdGg6IDMycHg7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgc3Ryb2tlOiBjdXJyZW50Q29sb3I7IH1cblxuLm10LWFuaW1hdGlvbi1lbnRlci1sZWF2ZV9fZmFkZS5uZy1lbnRlciwgLm10LWFuaW1hdGlvbi1lbnRlci1sZWF2ZV9fZmFkZS5uZy1sZWF2ZSB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMjAwbXMgbGluZWFyOyB9XG5cbi5tdC1hbmltYXRpb24tZW50ZXItbGVhdmVfX2ZhZGUubmctZW50ZXIsIC5tdC1hbmltYXRpb24tZW50ZXItbGVhdmVfX2ZhZGUubmctbGVhdmUubmctbGVhdmUtYWN0aXZlIHtcbiAgb3BhY2l0eTogMDsgfVxuXG4ubXQtYW5pbWF0aW9uLWVudGVyLWxlYXZlX19mYWRlLm5nLWxlYXZlLCAubXQtYW5pbWF0aW9uLWVudGVyLWxlYXZlX19mYWRlLm5nLWVudGVyLm5nLWVudGVyLWFjdGl2ZSB7XG4gIG9wYWNpdHk6IDE7IH1cblxuLm10LWJhY2tkcm9wIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgei1pbmRleDogNDk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIsIDEyLCAxMywgMC44NSk7IH1cblxuLm10LW1vZGFsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgei1pbmRleDogNTA7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAubXQtbW9kYWwubmctZW50ZXIsIC5tdC1tb2RhbC5uZy1sZWF2ZSB7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgdHJhbnNmb3JtO1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDIwMG1zO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXIsIGN1YmljLWJlemllcigwLjgsIDAsIDAuMiwgMSk7IH1cbiAgLm10LW1vZGFsLm5nLWVudGVyIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjUlKTsgfVxuICAubXQtbW9kYWwubmctZW50ZXIubmctZW50ZXItYWN0aXZlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAubXQtbW9kYWwubmctbGVhdmUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gIC5tdC1tb2RhbC5uZy1sZWF2ZS5uZy1sZWF2ZS1hY3RpdmUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yNSUpOyB9XG5cbi5tdC1tb2RhbF9fY29udGFpbmVyIHtcbiAgbWF4LWhlaWdodDogMTAwJTtcbiAgbWF4LXdpZHRoOiA1NTBweDtcbiAgcGFkZGluZzogOHB4O1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4ubXQtbW9kYWxfX2ZyYW1lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBjb2xvcjogYmxhY2s7XG4gIGJveC1zaGFkb3c6IDAgMjdweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA0MHB4IDc3cHggcmdiYSgwLCAwLCAwLCAwLjIyKTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4ubXQtbW9kYWxfX3RpdGxlIHtcbiAgZmxleDogbm9uZTtcbiAgcGFkZGluZzogMCAyNHB4O1xuICBtYXJnaW46IDI0cHggMDtcbiAgY29sb3I6ICMzMTMxMzU7XG4gIGZvbnQ6IDI0cHgvMzJweCBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNzAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLm10LW1vZGFsX19jb250ZW50IHtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG5cbi5tdC1tb2RhbF9fY29udGVudF9fd3JhcHBlciB7XG4gIHBhZGRpbmc6IDAgMjRweDsgfVxuXG4ubXQtbW9kYWxfX2NvbnRlbnRfX3BhcmFncmFwaCB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7IH1cblxuLm10LW1vZGFsX19jb250ZW50X19zdWIge1xuICBmb250OiAxM3B4LzIwcHggXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubXQtbW9kYWxfX2NvbW1hbmRzIHtcbiAgZmxleDogbm9uZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG4ubXQtbW9kYWxfX2J1dHRvbiB7XG4gIG1hcmdpbjogOHB4O1xuICBsaW5lLWhlaWdodDogNDBweDtcbiAgbWluLXdpZHRoOiA2NHB4O1xuICBwYWRkaW5nOiAwIDhweDtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44Nyk7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzhmYzM0NjtcbiAgYm9yZGVyLXJhZGl1czogMnB4OyB9XG4gIC5tdC1tb2RhbF9fYnV0dG9uLm5nLWNsaWNrLWFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkpOyB9XG4gIC5tdC1tb2RhbF9fYnV0dG9uLnNlY29uZGFyeSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzhmYzM0NjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4ubXQtbW9kYWxfX2xpbmsge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4ubXQtcXVldWUtbG9hZGluZ19fbWVzc2FnZSB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7IH1cblxuLm10LXF1ZXVlLWxvYWRpbmdfX3NwaW5uZXIge1xuICBoZWlnaHQ6IDk2cHg7XG4gIGNvbG9yOiAjOGZjMzQ2OyB9XG5cbi5tdC1ub3RpZmljYXRpb25zLWNlbnRlcl9fY29udGFpbmVyIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLm10LW5vdGlmaWNhdGlvbnMtY2VudGVyX19jb250YWluZXJfX3BhZGRpbmcge1xuICBwYWRkaW5nOiAwIDhweDtcbiAgbWFyZ2luLXRvcDogOHB4O1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4ubXQtbm90aWZpY2F0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTAsIDI1MCwgMjUwLCAwLjg1KTtcbiAgY29sb3I6IGJsYWNrO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGJveC1zaGFkb3c6IDAgMjdweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA0MHB4IDc3cHggcmdiYSgwLCAwLCAwLCAwLjIyKTsgfVxuICAubXQtbm90aWZpY2F0aW9uLmVycm9yIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4MiwgNTcsIDM3LCAwLjg1KTtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg3KTsgfVxuXG4ubXQtbm90aWZpY2F0aW9uX19jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmb250OiAxM3B4LzIwcHggXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubXQtbm90aWZpY2F0aW9uX190ZXh0IHtcbiAgcGFkZGluZzogMCAxNnB4O1xuICBtYXJnaW46IDE2cHggMDtcbiAgZmxleDogMTsgfVxuXG4ubXQtbm90aWZpY2F0aW9uX190aHVtYm5haWwge1xuICBwYWRkaW5nLXJpZ2h0OiA4cHg7XG4gIG1hcmdpbi10b3A6IDhweDsgfVxuXG4ubXQtbm90aWZpY2F0aW9uX19pbWFnZSB7XG4gIHdpZHRoOiA4MHB4O1xuICBoZWlnaHQ6IDgwcHg7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IH1cblxuLm10LWNvbWluZy1uZXh0X19ncm91cC5uZXh0IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLm10LWNvbWluZy1uZXh0X19ncm91cDpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDhweDtcbiAgcGFkZGluZy1ib3R0b206IDE2cHg7IH1cblxuLm10LWNvbWluZy1uZXh0X19oZWFkZXIge1xuICBmb250OiAxM3B4LzIwcHggXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTsgfVxuXG4ubXQtY29taW5nLW5leHRfX3RpdGxlIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IH1cblxuLm10LWhlYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIHJpZ2h0OiAwcHg7XG4gIGJvdHRvbTogMHB4O1xuICBsZWZ0OiAwcHg7XG4gIHotaW5kZXg6IDE7XG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi5tdC1oZWFkZXJfX2JnIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzEzNTtcbiAgYm94LXNoYWRvdzogMCAxMnB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjI0KSwgMCAxN3B4IDUwcHggcmdiYSgwLCAwLCAwLCAwLjE5KTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAgIC5tdC1oZWFkZXJfX2JnIHtcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDIwMG1zO1xuICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjgsIDAsIDAuMiwgMSksIGxpbmVhcjsgfVxuICAgICAgLm10LWhlYWRlcl9fYmcuaWRsZSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfSB9XG5cbi5tdC1oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubXQtaGVhZGVyX19jb250YWluZXIgPiAuc3RhcnQge1xuICAgIGZsZXg6IDE7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAubXQtaGVhZGVyX19jb250YWluZXIgPiAuZW5kIHtcbiAgICBmbGV4OiAxOyB9XG4gIC5tdC1oZWFkZXJfX2NvbnRhaW5lciA+IC5mbG9hdGluZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMHB4O1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgbGVmdDogYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLm10LWhlYWRlcl9fYXBwLXRpdGxlIHtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBhZGRpbmc6IDAgMTZweDsgfVxuXG4ubXQtaGVhZGVyX19wbGF5YmFjay1idXR0b24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLm10LWhlYWRlcl9fcGxheWJhY2stYnV0dG9uIC5mYWNldCB7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5tdC1oZWFkZXJfX3BsYXliYWNrLWJ1dHRvbiAuZmFjZXQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwOyB9XG4gIC5tdC1oZWFkZXJfX3BsYXliYWNrLWJ1dHRvbiAuZmFjZXRfX2FuaW1hdGlvbi10b2dnbGUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC41KTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDIwMG1zO1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuOCwgMCwgMC4yLCAxKSwgbGluZWFyOyB9XG4gICAgLm10LWhlYWRlcl9fcGxheWJhY2stYnV0dG9uIC5mYWNldF9fYW5pbWF0aW9uLXRvZ2dsZS50b2dnbGUge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgIG9wYWNpdHk6IDE7IH1cblxuLm10LXNlYXJjaC1pbnB1dF9fYnV0dG9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIHotaW5kZXg6IDE7IH1cbiAgLm10LXNlYXJjaC1pbnB1dF9fYnV0dG9uIC5mYWNldCB7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5tdC1zZWFyY2gtaW5wdXRfX2J1dHRvbiAuZmFjZXQ6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7IH1cbiAgLm10LXNlYXJjaC1pbnB1dF9fYnV0dG9uIC5mYWNldF9fYW5pbWF0aW9uLXRvZ2dsZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjUpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMjAwbXM7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC44LCAwLCAwLjIsIDEpLCBsaW5lYXI7IH1cbiAgICAubXQtc2VhcmNoLWlucHV0X19idXR0b24gLmZhY2V0X19hbmltYXRpb24tdG9nZ2xlLnRvZ2dsZSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgICAgb3BhY2l0eTogMTsgfVxuXG4ubXQtc2VhcmNoLWlucHV0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IGF1dG87XG4gIG1heC13aWR0aDogNTUwcHg7XG4gIHBhZGRpbmc6IDAgNDhweCAwIDhweDtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44Nyk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLm10LXNlYXJjaC1pbnB1dF9fZmllbGQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIHotaW5kZXg6IDE7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0YTRhNGY7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG4gIC5tdC1zZWFyY2gtaW5wdXRfX2ZpZWxkOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNBOUE5QTk7XG4gICAgdGV4dC1vdmVyZmxvdzogY2xpcDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG5cbi5tdC1zZWFyY2gtaW5wdXRfX2Zha2UtZmllbGQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICByaWdodDogMHB4O1xuICBib3R0b206IDBweDtcbiAgbGVmdDogMHB4O1xuICBwYWRkaW5nOiAwIDQ4cHggMCA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0YTRhNGY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLm10LXNlYXJjaC1pbnB1dF9fZmFrZS1maWVsZC5lbXB0eTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1tdC1wbGFjZWhvbGRlcik7XG4gICAgY29sb3I6ICNBOUE5QTk7XG4gICAgdGV4dC1vdmVyZmxvdzogY2xpcDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG5cbi5tdC1zZWFyY2gtaW5wdXRfX2Zha2UtZmllbGRfX3RleHQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLm10LXNjZW5lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IDBweDsgfVxuICAubXQtc2NlbmU6YWZ0ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDBweDtcbiAgICByaWdodDogMHB4O1xuICAgIGJvdHRvbTogMHB4O1xuICAgIGxlZnQ6IDBweDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubXQtc2NlbmVfX2VsZW1lbnQtaG9zdCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIHJpZ2h0OiAwcHg7XG4gIGJvdHRvbTogMHB4O1xuICBsZWZ0OiAwcHg7IH1cbiAgLm10LXNjZW5lX19lbGVtZW50LWhvc3QgaWZyYW1lIHtcbiAgICBvcGFjaXR5OiBpbmhlcml0OyB9XG5cbi5tdC1xdWV1ZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIHJpZ2h0OiAwcHg7XG4gIGJvdHRvbTogMHB4O1xuICBsZWZ0OiAwcHg7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTkxOTFhOyB9XG5cbi5tdC1xdWV1ZV9fZW50cnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMTM1OyB9XG4gIC5tdC1xdWV1ZV9fZW50cnkgLm10LXF1ZXVlX19lbnRyeV9fZGF0YTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDEwMCU7XG4gICAgbGVmdDogMTZweDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgd2lkdGg6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMTJweCBzb2xpZCAjMzEzMTM1O1xuICAgIGJvcmRlci1sZWZ0OiAxMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yaWdodDogMTJweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuICAubXQtcXVldWVfX2VudHJ5LmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzhmYzM0NjsgfVxuICAgIC5tdC1xdWV1ZV9fZW50cnkuYWN0aXZlIC5tdC1xdWV1ZV9fZW50cnlfX2RhdGE6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAxMDAlO1xuICAgICAgbGVmdDogMTZweDtcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMTJweCBzb2xpZCAjOGZjMzQ2O1xuICAgICAgYm9yZGVyLWxlZnQ6IDEycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItcmlnaHQ6IDEycHggc29saWQgdHJhbnNwYXJlbnQ7IH1cbiAgLm10LXF1ZXVlX19lbnRyeS5icm9rZW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiNjM5MjU7IH1cbiAgICAubXQtcXVldWVfX2VudHJ5LmJyb2tlbiAubXQtcXVldWVfX2VudHJ5X19kYXRhOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMTAwJTtcbiAgICAgIGxlZnQ6IDE2cHg7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICB3aWR0aDogMDtcbiAgICAgIGJvcmRlci1ib3R0b206IDEycHggc29saWQgI2I2MzkyNTtcbiAgICAgIGJvcmRlci1sZWZ0OiAxMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxMnB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG5cbi5tdC1xdWV1ZV9fZW50cnlfX3RodW1ibmFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubXQtcXVldWVfX2VudHJ5X190aHVtYm5haWwgPiAuaW1hZ2Uge1xuICAgIHBhZGRpbmctdG9wOiA0MCU7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgZmlsdGVyOiBzYXR1cmF0ZSg1JSk7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAgICAgLm10LXF1ZXVlX19lbnRyeV9fdGh1bWJuYWlsID4gLmltYWdlIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICAgIGhlaWdodDogMTI4cHg7IH0gfVxuICAubXQtcXVldWVfX2VudHJ5LmFjdGl2ZSAubXQtcXVldWVfX2VudHJ5X190aHVtYm5haWwgPiAuaW1hZ2Uge1xuICAgIGZpbHRlcjogbm9uZTsgfVxuXG4ubXQtcXVldWVfX2VudHJ5X19icm9rZW4tbWVzc2FnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIHJpZ2h0OiAwcHg7XG4gIGJvdHRvbTogMHB4O1xuICBsZWZ0OiAwcHg7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTgyLCA1NywgMzcsIDAuODUpOyB9XG4gIC5tdC1xdWV1ZV9fZW50cnkuYnJva2VuIC5tdC1xdWV1ZV9fZW50cnlfX2Jyb2tlbi1tZXNzYWdlIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5tdC1xdWV1ZV9fZW50cnlfX3NwaW5uZXItY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuLm10LXF1ZXVlX19lbnRyeV9fc3Bpbm5lciB7XG4gIHdpZHRoOiA2NHB4O1xuICBjb2xvcjogIzhmYzM0NjsgfVxuXG4ubXQtcXVldWVfX2VudHJ5X19kYXRhIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4ubXQtcXVldWVfX2VudHJ5X190aXRsZSB7XG4gIGZsZXg6IDE7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgbWFyZ2luOiAxMnB4IDA7IH1cblxuLm10LXF1ZXVlX19lbnRyeV9fY29tbWFuZHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5tdC1xdWV1ZV9fZW50cnlfX3JlbW92ZS1idXR0b24ge1xuICBwYWRkaW5nLXJpZ2h0OiA4cHg7XG4gIG9wYWNpdHk6IC4yO1xuICB3aWxsLWNoYW5nZTogb3BhY2l0eTtcbiAgZGlzcGxheTogZmxleDsgfVxuICAubXQtcXVldWVfX2VudHJ5X19yZW1vdmUtYnV0dG9uLm5nLWNsaWNrLWFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkpOyB9XG4gIEBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcikge1xuICAgIC5tdC1xdWV1ZV9fZW50cnlfX3JlbW92ZS1idXR0b246aG92ZXIge1xuICAgICAgb3BhY2l0eTogMTsgfSB9XG5cbi5tdC1zZWFyY2gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICByaWdodDogMHB4O1xuICBib3R0b206IDBweDtcbiAgbGVmdDogMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDc0LCA3NCwgNzksIDAuOCk7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOyB9XG5cbi5tdC1zZWFyY2hfX3Byb3ZpZGVyX19oZWFkZXIge1xuICBwYWRkaW5nOiAwIDhweDtcbiAgbWFyZ2luOiAxNnB4IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLm10LXNlYXJjaF9fcHJvdmlkZXJfX2hlYWRlcl9fc3Bpbm5lciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgbWFyZ2luLWxlZnQ6IDhweDsgfVxuXG4ubXQtc2VhcmNoX19tZXNzYWdlIHtcbiAgcGFkZGluZzogMCA4cHg7IH1cblxuLm10LXNlYXJjaF9fbWVzc2FnZV9fcGFkZGluZyB7XG4gIHBhZGRpbmctYm90dG9tOiAxNnB4OyB9XG5cbi5tdC1yZXN1bHRzIHtcbiAgcGFkZGluZy1sZWZ0OiA4cHg7IH1cblxuLm10LWpzLXJlc3VsdHM6YmVmb3JlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgY29udGVudDogJ3tcInByb21vdGVkQ291bnRcIjogMSwgXCJyZWd1bGFyQ291bnRcIjogMX0nOyB9XG5cbi5tdC1yZXN1bHQge1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICBwYWRkaW5nLXJpZ2h0OiA4cHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5tdC1yZXN1bHRfX2NvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGluaGVyaXQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgLm10LWpzLXJlc3VsdHM6YmVmb3JlIHtcbiAgICBjb250ZW50OiAne1wicHJvbW90ZWRDb3VudFwiOiAxLCBcInJlZ3VsYXJDb3VudFwiOiAxfSc7IH1cbiAgLm10LXJlc3VsdCB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLm10LXJlc3VsdF9fY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDMyMHB4OyB9XG4gIC5tdC1yZXN1bHRfX3RodW1ibmFpbCB7XG4gICAgaGVpZ2h0OiAxODBweDtcbiAgICBwYWRkaW5nLXRvcDogMDsgfVxuICAubXQtcmVzdWx0c19fcGFnZTpmaXJzdC1jaGlsZCAubXQtcmVzdWx0Om50aC1jaGlsZCgtbiArIDEpIHtcbiAgICB3aWR0aDogMTAwJTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY1NnB4KSB7XG4gIC5tdC1qcy1yZXN1bHRzOmJlZm9yZSB7XG4gICAgY29udGVudDogJ3tcInByb21vdGVkQ291bnRcIjogMiwgXCJyZWd1bGFyQ291bnRcIjogM30nOyB9XG4gIC5tdC1yZXN1bHQge1xuICAgIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgLm10LXJlc3VsdF9fY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDMyMHB4OyB9XG4gIC5tdC1yZXN1bHRfX3RodW1ibmFpbCB7XG4gICAgaGVpZ2h0OiAxODBweDtcbiAgICBwYWRkaW5nLXRvcDogMDsgfVxuICAubXQtcmVzdWx0c19fcGFnZTpmaXJzdC1jaGlsZCAubXQtcmVzdWx0Om50aC1jaGlsZCgtbiArIDIpIHtcbiAgICB3aWR0aDogNTAlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTg0cHgpIHtcbiAgLm10LWpzLXJlc3VsdHM6YmVmb3JlIHtcbiAgICBjb250ZW50OiAne1wicHJvbW90ZWRDb3VudFwiOiAzLCBcInJlZ3VsYXJDb3VudFwiOiA0fSc7IH1cbiAgLm10LXJlc3VsdCB7XG4gICAgd2lkdGg6IDI1JTsgfVxuICAubXQtcmVzdWx0X19jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzIwcHg7IH1cbiAgLm10LXJlc3VsdF9fdGh1bWJuYWlsIHtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICAgIHBhZGRpbmctdG9wOiAwOyB9XG4gIC5tdC1yZXN1bHRzX19wYWdlOmZpcnN0LWNoaWxkIC5tdC1yZXN1bHQ6bnRoLWNoaWxkKC1uICsgMykge1xuICAgIHdpZHRoOiAzMy4zMzMzMyU7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMzEycHgpIHtcbiAgLm10LWpzLXJlc3VsdHM6YmVmb3JlIHtcbiAgICBjb250ZW50OiAne1wicHJvbW90ZWRDb3VudFwiOiA0LCBcInJlZ3VsYXJDb3VudFwiOiA2fSc7IH1cbiAgLm10LXJlc3VsdCB7XG4gICAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICAubXQtcmVzdWx0X19jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzIwcHg7IH1cbiAgLm10LXJlc3VsdF9fdGh1bWJuYWlsIHtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICAgIHBhZGRpbmctdG9wOiAwOyB9XG4gIC5tdC1yZXN1bHRzX19wYWdlOmZpcnN0LWNoaWxkIC5tdC1yZXN1bHQ6bnRoLWNoaWxkKC1uICsgNCkge1xuICAgIHdpZHRoOiAyNSU7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNjQwcHgpIHtcbiAgLm10LWpzLXJlc3VsdHM6YmVmb3JlIHtcbiAgICBjb250ZW50OiAne1wicHJvbW90ZWRDb3VudFwiOiA1LCBcInJlZ3VsYXJDb3VudFwiOiA3fSc7IH1cbiAgLm10LXJlc3VsdCB7XG4gICAgd2lkdGg6IDE0LjI4NTcxJTsgfVxuICAubXQtcmVzdWx0X19jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzIwcHg7IH1cbiAgLm10LXJlc3VsdF9fdGh1bWJuYWlsIHtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICAgIHBhZGRpbmctdG9wOiAwOyB9XG4gIC5tdC1yZXN1bHRzX19wYWdlOmZpcnN0LWNoaWxkIC5tdC1yZXN1bHQ6bnRoLWNoaWxkKC1uICsgNSkge1xuICAgIHdpZHRoOiAyMCU7IH0gfVxuXG4ubXQtcmVzdWx0X190aHVtYm5haWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctdG9wOiA1Ni4yNSU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTMxMzU7IH1cbiAgLm10LXJlc3VsdF9fdGh1bWJuYWlsOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0NXB4O1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHRyYW5zcGFyZW50IDAlLCByZ2JhKDAsIDAsIDAsIDAuNykgNzAlLCByZ2JhKDAsIDAsIDAsIDAuNykgMTAwJSk7IH1cblxuLm10LXJlc3VsdF9fdGh1bWJuYWlsX19pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICByaWdodDogMHB4O1xuICBib3R0b206IDBweDtcbiAgbGVmdDogMHB4OyB9XG4gIC5tdC1yZXN1bHRfX3RodW1ibmFpbF9faW1nIC5tdC1zbWFydC1pbWdfX2ltYWdlIHtcbiAgICBmaWx0ZXI6IHNhdHVyYXRlKDEwMCUpOyB9XG4gICAgLm10LXJlc3VsdF9fdGh1bWJuYWlsX19pbWcgLm10LXNtYXJ0LWltZ19faW1hZ2UubXQtbG9hZGluZyB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgZmlsdGVyOiBzYXR1cmF0ZSgwKTsgfVxuICAgIC5tdC1yZXN1bHRfX3RodW1ibmFpbF9faW1nIC5tdC1zbWFydC1pbWdfX2ltYWdlLm10LWxvYWRpbmctcmVtb3ZlIHtcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IG9wYWNpdHksIGZpbHRlcjtcbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDEwMDBtcywgMjAwMG1zOyB9XG4gIC5tdC1yZXN1bHRfX3RodW1ibmFpbF9faW1nIC5sb2FkaW5nLWluZGljYXRvciB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjU0KTsgfVxuXG4ubXQtcmVzdWx0X19hZGRlZC1jb25maXJtYXRpb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzEzNTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uID4gLnRleHQge1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAgICAgLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uID4gLnRleHQge1xuICAgICAgICBmb250OiAxM3B4LzIwcHggXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjsgfVxuICAgICAgICAubXQtcmVzdWx0X19hZGRlZC1jb25maXJtYXRpb24gPiAudGV4dDpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6IGF0dHIobXQtc2hvcnQtdGV4dCk7IH1cbiAgICAgICAgLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uID4gLnRleHQgPiAubXQtcmVwbGFjZWQtdGV4dCB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5tdC1yZXN1bHRfX2FkZGVkLWNvbmZpcm1hdGlvbi5tdC1yZXN1bHRfX2FkZGVkLWNvbmZpcm1hdGlvbl9fYW5pbWF0aW9uLWlmLm5nLWVudGVyLCAubXQtcmVzdWx0X19hZGRlZC1jb25maXJtYXRpb24ubXQtcmVzdWx0X19hZGRlZC1jb25maXJtYXRpb25fX2FuaW1hdGlvbi1pZi5uZy1sZWF2ZSB7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDIwMG1zO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC44LCAwLCAwLjIsIDEpLCBsaW5lYXI7IH1cbiAgLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uX19hbmltYXRpb24taWYubmctZW50ZXIsIC5tdC1yZXN1bHRfX2FkZGVkLWNvbmZpcm1hdGlvbi5tdC1yZXN1bHRfX2FkZGVkLWNvbmZpcm1hdGlvbl9fYW5pbWF0aW9uLWlmLm5nLWxlYXZlLm5nLWxlYXZlLWFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gICAgb3BhY2l0eTogLjU7IH1cbiAgLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uX19hbmltYXRpb24taWYubmctbGVhdmUsIC5tdC1yZXN1bHRfX2FkZGVkLWNvbmZpcm1hdGlvbi5tdC1yZXN1bHRfX2FkZGVkLWNvbmZpcm1hdGlvbl9fYW5pbWF0aW9uLWlmLm5nLWVudGVyLm5nLWVudGVyLWFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi5tdC1yZXN1bHRfX2RhdGEge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHg7IH1cblxuLm10LXJlc3VsdF9fZGF0YV9faXRlbSB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyB9XG4gIC5tdC1yZXN1bHRfX2RhdGFfX2l0ZW0uaGVhZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7IH1cblxuLm10LXJlc3VsdF9fZGF0YV9fdGl0bGUge1xuICBmbGV4OiAxO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgZm9udDogMTNweC8yMHB4IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuLm10LXJlc3VsdF9fZGF0YV9fcHVibGlzaGVyIHtcbiAgZm9udDogMTNweC8yMHB4IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7IH1cblxuLm10LXJlc3VsdF9fZGF0YV9fZHVyYXRpb24ge1xuICB3aWR0aDogNmNoO1xuICBmb250OiAxM3B4LzIwcHggXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cblxuLm10LXNlYXJjaF9fc2hvdy1tb3JlIHtcbiAgcGFkZGluZzogMCA4cHg7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbiAgZGlzcGxheTogZmxleDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xuICAgIC5tdC1zZWFyY2hfX3Nob3ctbW9yZSB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9IH1cblxuLm10LXNlYXJjaF9fc2hvdy1tb3JlX19idXR0b24ge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5MTkxYTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAwIDhweDtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTUwcHgpIHtcbiAgICAubXQtc2VhcmNoX19zaG93LW1vcmVfX2J1dHRvbiB7XG4gICAgICB3aWR0aDogYXV0bzsgfSB9XG4gIEBtZWRpYSAoYW55LWhvdmVyOiBob3Zlcikge1xuICAgIC5tdC1zZWFyY2hfX3Nob3ctbW9yZV9fYnV0dG9uOmhvdmVyIC50ZXh0IHtcbiAgICAgIGNvbG9yOiAjOGZjMzQ2OyB9IH1cblxuLm10LXNlYXJjaF9fc2hvdy1tb3JlX19idXR0b25fX2xhYmVsIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHBhZGRpbmc6IDAgMjRweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubXQtc2VhcmNoX19zaG93LW1vcmVfX2J1dHRvbl9fbGFiZWwgLmxvYWRlciB7XG4gICAgd2lkdGg6IDA7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLm10LXNlYXJjaF9fc2hvdy1tb3JlX19zcGlubmVyIHtcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDtcbiAgbWFyZ2luLWxlZnQ6IDhweDsgfVxuIiwiQGltcG9ydCAnYm91cmJvbic7XG5cbkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICd1dGlscyc7XG5cbkBtaXhpbiBtb2RhbHMtYmFzZSB7XG5cbiAgJHotaW5kZXg6IDEwICogJGRlcHRoLWRpYWxvZztcblxuICAubXQtYmFja2Ryb3Age1xuICAgIEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAwcHggMHB4IDBweCAwcHgpO1xuXG4gICAgei1pbmRleDogJHotaW5kZXggLSAxO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY29sb3ItYmFja2dyb3VuZCwgJG9wYWNpdHktcmF0aW8tb3ZlcmxheSk7XG4gIH1cblxuICAubXQtbW9kYWwge1xuICAgIEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAwcHggMHB4IDBweCAwcHgpO1xuXG4gICAgei1pbmRleDogJHotaW5kZXg7XG5cbiAgICAvLyBzYWZldHkgbmV0IGZvciBJRTExIHRoYXQgY2FuJ3QgcHJvcGVybHkgbWFuYWdlIG5lc3RlZCBmbGV4IGNvbnRhaW5lcnNcbiAgICAvLyBzZWUgaHR0cDovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzgwMjYyNS9taW4taGVpZ2h0LWFuZC1mbGV4Ym94LWZsZXgtZGlyZWN0aW9uLWNvbHVtbi1kb250LXdvcmstdG9nZXRoZXItaW4taWUtMTAtMTEtcHJldmlld1xuICAgIG92ZXJmbG93OiBhdXRvO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAvLyBzaG93cyB0aGUgb3ZlcmxheVxuICAgICYubmctZW50ZXIsICYubmctbGVhdmUge1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgdHJhbnNmb3JtO1xuICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogJHRyYW5zaXRpb24tZHVyYXRpb247XG4gICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyLCAkdGltaW5nLWZ1bmN0aW9uLWVhc2UtaW4tb3V0O1xuICAgIH1cblxuICAgICYubmctZW50ZXIge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjUlKTtcbiAgICB9XG5cbiAgICAmLm5nLWVudGVyLm5nLWVudGVyLWFjdGl2ZSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIH1cblxuICAgICYubmctbGVhdmUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB9XG5cbiAgICAmLm5nLWxlYXZlLm5nLWxlYXZlLWFjdGl2ZSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yNSUpO1xuICAgIH1cbiAgfVxufSIsIkBpbXBvcnQgJ2JvdXJib24nO1xuXG5AaW1wb3J0ICd2YXJpYWJsZXMnO1xuQGltcG9ydCAndXRpbHMnO1xuXG5AbWl4aW4gbW9kYWxzIHtcblxuICAubXQtbW9kYWxfX2NvbnRhaW5lciB7XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICBtYXgtd2lkdGg6ICR3aWR0aC1icmVha3BvaW50LXNpbmdsZS1jb2x1bW4tbGF5b3V0O1xuICAgIHBhZGRpbmc6ICRncmlkLXNpemU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG5cbiAgICAvLyBwcm9wYWdhdGUgdGhlIFwiZmxleGliaWxpdHlcIlxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuXG4gIC5tdC1tb2RhbF9fZnJhbWUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1jb250cmFzdDtcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcbiAgICBjb2xvcjogJGNvbG9yLXRleHQtYmxhY2stdGV4dDtcbiAgICBAaW5jbHVkZSB6LWRlcHRoKCRkZXB0aC1kaWFsb2cpO1xuXG4gICAgLy8gcHJvcGFnYXRlIHRoZSBcImZsZXhpYmlsaXR5XCJcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAubXQtbW9kYWxfX3RpdGxlIHtcbiAgICBmbGV4OiBub25lO1xuICAgIHBhZGRpbmc6IDAgMyAqICRncmlkLXNpemU7XG4gICAgbWFyZ2luOiAzICogJGdyaWQtc2l6ZSAwO1xuXG4gICAgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xuICAgIGZvbnQ6ICRmb250LWJpZ2dlcjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5tdC1tb2RhbF9fY29udGVudCB7XG4gICAgLy8gdXNlIHRoZSBpbml0aWFsIHZhbHVlIGZvciBmbGV4ICgwIDEgYXV0bylcbiAgICAvLyB3aWxsIHNocmluayB0byBtYXRjaCB0aGUgYXZhaWxhYmxlIGhlaWdodCBvciBleHBhbmQgdG8gZ2l2ZSBlbm91Z2ggcGxhY2UgdG8gdGhlIGNvbnRlbnRcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcblxuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gIH1cblxuICAubXQtbW9kYWxfX2NvbnRlbnRfX3dyYXBwZXIge1xuICAgIHBhZGRpbmc6IDAgMyAqICRncmlkLXNpemU7XG4gIH1cblxuICAubXQtbW9kYWxfX2NvbnRlbnRfX3BhcmFncmFwaCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMyAqICRncmlkLXNpemU7XG4gIH1cblxuICAubXQtbW9kYWxfX2NvbnRlbnRfX3N1YiB7XG4gICAgZm9udDogJGZvbnQtc21hbGxlcjtcbiAgfVxuXG4gIC5tdC1tb2RhbF9fY29tbWFuZHMge1xuICAgIGZsZXg6IG5vbmU7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIH1cblxuICAubXQtbW9kYWxfX2J1dHRvbiB7XG4gICAgQGluY2x1ZGUgbXQtY2xpY2stcmVhY3Rpb24oKTtcblxuICAgIG1hcmdpbjogJGdyaWQtc2l6ZTtcblxuICAgIGxpbmUtaGVpZ2h0OiA1ICogJGdyaWQtc2l6ZTtcbiAgICBtaW4td2lkdGg6IDggKiAkZ3JpZC1zaXplO1xuICAgIHBhZGRpbmc6IDAgJGdyaWQtc2l6ZTtcblxuICAgIGNvbG9yOiAkY29sb3ItdGV4dDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYWNjZW50O1xuICAgIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xuXG4gICAgJi5zZWNvbmRhcnkge1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yLWFjY2VudDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIH1cblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgLy9tYXJnaW4tbGVmdDogMDtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgLy9tYXJnaW4tcmlnaHQ6IDA7XG4gICAgfVxuICB9XG5cbiAgLm10LW1vZGFsX19saW5rIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxufSIsIkBpbXBvcnQgJ3V0aWxzJztcblxuQG1peGluIG5vdGlmaWNhdGlvbnMge1xuXG4gIC5tdC1ub3RpZmljYXRpb25zLWNlbnRlcl9fY29udGFpbmVyIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTsgLy8gbGV0cyBzaG93IHRoZSBzaGFkb3dcbiAgfVxuXG4gIC5tdC1ub3RpZmljYXRpb25zLWNlbnRlcl9fY29udGFpbmVyX19wYWRkaW5nIHtcbiAgICBwYWRkaW5nOiAwICRncmlkLXNpemU7XG4gICAgbWFyZ2luLXRvcDogJGdyaWQtc2l6ZTtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgfVxuXG4gIC5tdC1ub3RpZmljYXRpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yLWNvbnRyYXN0LCAkb3BhY2l0eS1yYXRpby1vdmVybGF5KTtcbiAgICBjb2xvcjogJGNvbG9yLXRleHQtYmxhY2stdGV4dDtcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcbiAgICBAaW5jbHVkZSB6LWRlcHRoKDUpO1xuXG4gICAgJi5lcnJvciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvci1hY2NlbnQtZXJyb3IsICRvcGFjaXR5LXJhdGlvLW92ZXJsYXkpO1xuICAgICAgY29sb3I6ICRjb2xvci10ZXh0O1xuICAgIH1cbiAgfVxuXG4gIC5tdC1ub3RpZmljYXRpb25fX2NvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgZm9udDogJGZvbnQtc21hbGxlcjtcbiAgfVxuXG4gIC5tdC1ub3RpZmljYXRpb25fX3RleHQge1xuICAgIHBhZGRpbmc6IDAgMiAqICRncmlkLXNpemU7XG4gICAgbWFyZ2luOiAyICogJGdyaWQtc2l6ZSAwO1xuXG4gICAgZmxleDogMTtcbiAgfVxuXG4gIC5tdC1ub3RpZmljYXRpb25fX3RodW1ibmFpbCB7XG4gICAgcGFkZGluZy1yaWdodDogJGdyaWQtc2l6ZTtcbiAgICBtYXJnaW4tdG9wOiAkZ3JpZC1zaXplO1xuICB9XG5cbiAgLm10LW5vdGlmaWNhdGlvbl9faW1hZ2Uge1xuICAgIHdpZHRoOiA4MHB4O1xuICAgIGhlaWdodDogODBweDtcblxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgfVxufSIsIkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5cbkBtaXhpbiBjb21pbmctbmV4dCB7XG5cbiAgLm10LWNvbWluZy1uZXh0X19ncm91cCB7XG4gICAgJi5uZXh0IHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXRvcDogJGdyaWQtc2l6ZTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAyICogJGdyaWQtc2l6ZTtcbiAgICB9XG4gIH1cblxuICAubXQtY29taW5nLW5leHRfX2hlYWRlciB7XG4gICAgZm9udDogJGZvbnQtc21hbGxlcjtcbiAgICBjb2xvcjogJGNvbG9yLXRleHQtYmxhY2stc2Vjb25kYXJ5O1xuICB9XG5cbiAgLm10LWNvbWluZy1uZXh0X190aXRsZSB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgfVxufSIsIkBpbXBvcnQgJ2JvdXJib24nO1xuXG5AaW1wb3J0ICd2YXJpYWJsZXMnO1xuQGltcG9ydCAndXRpbHMnO1xuXG5AbWl4aW4gaGVhZGVyKCkge1xuXG4gICRwYWRkaW5nLXNlYXJjaC1pbnB1dDogMCA2ICogJGdyaWQtc2l6ZSAwICRncmlkLXNpemU7XG5cbiAgLm10LWhlYWRlciB7XG4gICAgQGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsIDBweCAwcHggMHB4IDBweCk7XG4gICAgei1pbmRleDogMTtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTsgLy8gbGV0cyBzaG93IHRoZSBoZWFkZXIgc2hhZG93XG4gIH1cblxuICAvL2Zha2UgYmFja2dyb3VuZCBzbyB0aGF0IHdlIGNhbiBhbmltYXRlIHRoZSBoZWFkZXIgYmFja2dyb3VuZCBjb2xvciBieSB1c2luZyBvcGFjaXR5XG4gIC5tdC1oZWFkZXJfX2JnIHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1wcmltYXJ5O1xuICAgIEBpbmNsdWRlIHotZGVwdGgoJGRlcHRoLWhlYWRlcik7XG5cbiAgICBAaW5jbHVkZSBtdC1ob3Jpem9udGFsLXNjcmVlbigpIHtcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246ICR0cmFuc2l0aW9uLWR1cmF0aW9uO1xuICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246ICR0aW1pbmctZnVuY3Rpb24tZWFzZS1pbi1vdXQsIGxpbmVhcjtcblxuICAgICAgJi5pZGxlIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tdC1oZWFkZXJfX2NvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgLy8gYnJpbmdzIHRoZSBjb250YWluZXIgZm9yd2FyZCBvZiB0aGUgYmFja2dyb3VuZFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgID4gLnN0YXJ0IHtcbiAgICAgIGZsZXg6IDE7XG5cbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgPiAuZW5kIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgfVxuXG4gICAgLy8gYSBjb250YWluZXIgdGhhdCBpcyBwb3NpdGlvbmVkIGF0IHRoZSByaWdodCBvZiB0aGUgaGVhZGVyXG4gICAgPiAuZmxvYXRpbmcge1xuICAgICAgQGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsIDBweCAwcHggMHB4IGF1dG8pO1xuXG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gIH1cblxuICAubXQtaGVhZGVyX19hcHAtdGl0bGUge1xuICAgIC8vIG1ha2Ugc3VyZSB0aGUgZGVmYXVsdCBsaW5lIGhlaWdodCBkb2Vzbid0IG1ha2UgdGhlIGNvbnRhaW5lciB0byBoaWdoXG4gICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZzogMCAyICogJGdyaWQtc2l6ZTtcbiAgfVxuXG4gIC5tdC1oZWFkZXJfX3BsYXliYWNrLWJ1dHRvbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgLmZhY2V0IHtcbiAgICAgIC8vIGNlbnRlciB0aGUgaWNvblxuICAgICAgZGlzcGxheTogZmxleDtcblxuICAgICAgLy8gZmFjZXRzIHN0YWNrcyBidXQgb25seSBvbmUgaXMgdmlzaWJsZSBhdCB0aGUgdGltZVxuICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5mYWNldF9fYW5pbWF0aW9uLXRvZ2dsZSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKC41KTtcbiAgICAgIG9wYWNpdHk6IDA7XG5cbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246ICR0cmFuc2l0aW9uLWR1cmF0aW9uO1xuICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246ICR0aW1pbmctZnVuY3Rpb24tZWFzZS1pbi1vdXQsIGxpbmVhcjtcblxuICAgICAgJi50b2dnbGUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFNlYXJjaCBpbnB1dCBzdHlsZXNcbiAgLy9cbiAgLy8gV2UgbmVlZCBhIGxpdHRsZSBiaXQgb2YgYSBoYWNrIGhlcmUgYmVjYXVzZTpcbiAgLy8gIC0gd2UgbmVlZCB0byBmb2N1cyB0aGUgaW5wdXQgZmllbGQgb24gdXNlciBhY3Rpb24gZm9yIG1vYmlsZSBicm93c2VycyB0byBhY2NlcHQgdGhlIGZvY3VzIGFjdGlvbiBhbmQgc2hvdyB0aGUgdmlydHVhbCBrZXlib2FyZFxuICAvLyAgLSB3ZSBjYW4ndCBhbmltYXRlIGFuZCBmb2N1cyBhbiBpbnB1dCBiZWNhdXNlIGl0IGNyZWF0ZXMgZ2xpdGNoZXMgKGF0IGxlYXN0IGluIENocm9tZSk6IHRoZSBicm93c2VyIHdpbGwgbW92ZSB0aGVcbiAgLy8gICAgZm9jdXNlZCBpbnB1dCBpbnNpZGUgdGhlIHZpZXdwb3J0IHRvIG1ha2UgaXQgdmlzaWJsZVxuICAvLyAgLSB3ZSB3YW50IGFuIGNyb3NzIGJyb3dzZXIgd2F5IHRvIGZpeCB0aGF0XG4gIC8vIFNvIHRoYW5rcyB0byB0aGUgZm9sbG93aW5nIHN0eWxlcyBhbmQgdGhlIG10U2VhcmNoSW5wdXQgZGlyZWN0aXZlOlxuICAvLyAgLSB3ZSBhcHBlbmQgYSB0cmFuc3BhcmVudCAob3BhY2l0eTogMCkgXCJyZWFsXCIgaW5wdXQgbmV4dCB0byBhIFwiZmFrZVwiIG9uZSAoYmFzaWNhbGx5IGEgZGl2KSB0byBhIHRyYW5zbGF0ZWQgY29udGFpbmVyXG4gIC8vICAgIHNvIHRoYXQgaXQgaXMgb3V0c2lkZSBvZiB0aGUgdmlld3BvcnRcbiAgLy8gIC0gb24gdXNlciBhY3Rpb24gd2UgdHJhbnNsYXRlIHRoZSBjb250YWluZXIgaW5zaWRlIHRoZSB2aWV3LCB3ZSBmb2N1cyB0aGUgcmVhbCBpbnB1dCBhbmQgYW5pbWF0ZSB0aGUgZmFrZSBvbmVcbiAgLy8gIC0gYXQgdGhlIGVuZCBvZiB0aGUgZmFrZSBpbnB1dCBhbmltYXRpb24gd2UgbWFrZSB0aGUgcmVhbCBvbmUgdmlzaWJsZSAob3BhY2l0eTogMSlcblxuICAubXQtc2VhcmNoLWlucHV0X19idXR0b24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIG1hcmdpbi1yaWdodDogMiAqICRncmlkLXNpemU7XG5cbiAgICB6LWluZGV4OiAxO1xuXG4gICAgLmZhY2V0IHtcbiAgICAgIC8vIGNlbnRlciB0aGUgaWNvblxuICAgICAgZGlzcGxheTogZmxleDtcblxuICAgICAgLy8gZmFjZXRzIHN0YWNrcyBidXQgb25seSBvbmUgaXMgdmlzaWJsZSBhdCB0aGUgdGltZVxuICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZmFjZXRfX2FuaW1hdGlvbi10b2dnbGUge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSguNSk7XG4gICAgICBvcGFjaXR5OiAwO1xuXG4gICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbjtcbiAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybSwgb3BhY2l0eTtcbiAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkdGltaW5nLWZ1bmN0aW9uLWVhc2UtaW4tb3V0LCBsaW5lYXI7XG5cbiAgICAgICYudG9nZ2xlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyB0aGUgY29udGFpbmVyLCB3aWxsIGJlIHRyYW5zbGF0ZWQgYnV0IG5vdCBhbmltYXRlZFxuICAubXQtc2VhcmNoLWlucHV0IHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggYXV0byk7XG5cbiAgICBtYXgtd2lkdGg6ICR3aWR0aC1icmVha3BvaW50LXNpbmdsZS1jb2x1bW4tbGF5b3V0O1xuICAgIHBhZGRpbmc6ICRwYWRkaW5nLXNlYXJjaC1pbnB1dDtcblxuICAgIGNvbG9yOiAkY29sb3ItdGV4dDtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuXG4gIC8vIHRoZSByZWFsIGlucHV0LCBpcyBtYWRlIHRyYW5zcGFyZW50IGFuZCBiZWNvbWVzIG9wYXF1ZSBhdCB0aGUgZW5kXG4gIC5tdC1zZWFyY2gtaW5wdXRfX2ZpZWxkIHtcbiAgICBAZXh0ZW5kICVtdC1jaHJvbWVsZXNzLWlucHV0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMDtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWxpZ2h0ZXI7XG4gICAgZm9udDogaW5oZXJpdDtcbiAgICBjb2xvcjogaW5oZXJpdDtcblxuICAgIC8vIG92ZXJyaWRlcyBwbGFjZWhvbGRlciB0byBiZSBzdXJlIHRoYXQgaXQgaXMgY29oZXJlbnQgd2l0aCB0aGUgZmFrZSBmaWVsZCBwc2V1ZG8gcGxhY2Vob2xkZXJcbiAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICBAaW5jbHVkZSBtdC1wbGFjZWhvbGRlcigpO1xuICAgIH1cbiAgfVxuXG4gIC8vIHRoZSBhbmltYXRlZCBmYWtlIGZpZWxkIGdpdmVzIHRoZSBpbGx1c2lvbiB0aGF0IHRoZSByZWFsIGlucHV0IGlzIG1vdmluZ1xuICAubXQtc2VhcmNoLWlucHV0X19mYWtlLWZpZWxkIHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcbiAgICBwYWRkaW5nOiAkcGFkZGluZy1zZWFyY2gtaW5wdXQ7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItbGlnaHRlcjtcblxuICAgIC8vIGZvciBmYWtlIHBsYWNlaG9sZGVyIGFsaWdubWVudFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgLy8gYWxpZ24tc2VsZiBzZWVtcyB0byBub3Qgd29yayBmb3IgOmJlZm9yZSBwc2V1ZG8gZWxlbWVudCBpbiBJRTExXG5cbiAgICAvLyBzaW11bGF0ZXMgdGhlIHJlYWwgaW5wdXQgcGxhY2Vob2xkZXIgdW50aWwgdGhlIHJlYWwgaW5wdXQgaXMgbWFkZSB2aXNpYmxlXG4gICAgJi5lbXB0eTpiZWZvcmUge1xuICAgICAgY29udGVudDogYXR0cihkYXRhLW10LXBsYWNlaG9sZGVyKTtcblxuICAgICAgQGluY2x1ZGUgbXQtcGxhY2Vob2xkZXIoKTtcbiAgICB9XG4gIH1cblxuICAvLyBtYWtlIHN1cmUgdGhlIGZha2UgZmlsZWQgZG9lc24ndCBvdmVyZmxvd1xuICAubXQtc2VhcmNoLWlucHV0X19mYWtlLWZpZWxkX190ZXh0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbn0iLCJAaW1wb3J0ICdhZGRvbnMvcG9zaXRpb24nO1xuXG5AaW1wb3J0ICd2YXJpYWJsZXMnO1xuQGltcG9ydCAndXRpbHMnO1xuXG5AbWl4aW4gc2NlbmUge1xuXG4gIC5tdC1zY2VuZSB7XG4gICAgQGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsIDBweCAwcHggMHB4IDBweCk7XG5cbiAgICAvLyBhIGdsYXNzIHBhbmUgdG8gcHJldmVudCBhbnkgcG9pbnRlciBldmVudCB0byByZWFjaCB0aGUgdmlkZW8gZWxlbWVudHMgKGRiY2xpY2sgLT4gZnVsbCBzY3JlZW4pXG4gICAgJjphZnRlciB7XG4gICAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG5cbiAgLm10LXNjZW5lX19lbGVtZW50LWhvc3Qge1xuICAgIEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAwcHggMHB4IDBweCAwcHgpO1xuXG4gICAgLy8gcGxheWVycyBhbmQgd3JhcHBlcnMgbWlnaHQgZG8gc29tZSBcIndlaXJkXCIgc3R1ZmYgYnkgYXBwZW5kaW5nIGlmcmFtZVxuICAgIC8vIHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRoZSBvcGFjaXR5IHZhbHVlIGlzIGluaGVyaXRlZCBieSB0aGUgd2hvbGUgRE9NIHN1YnRyZWVcbiAgICBpZnJhbWUge1xuICAgICAgb3BhY2l0eTogaW5oZXJpdDtcbiAgICB9XG4gIH1cbn0iLCJAaW1wb3J0ICdhZGRvbnMvdHJpYW5nbGUnO1xuQGltcG9ydCAnYWRkb25zL3Bvc2l0aW9uJztcblxuQGltcG9ydCAndXRpbHMnO1xuXG5AbWl4aW4gcXVldWUtaXRlbS1jb2xvcigkY29sb3ItYmFja2dyb3VuZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYmFja2dyb3VuZDtcblxuICAubXQtcXVldWVfX2VudHJ5X19kYXRhOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMTAwJTtcbiAgICBsZWZ0OiAyICogJGdyaWQtc2l6ZTtcblxuICAgIEBpbmNsdWRlIHRyaWFuZ2xlKDMgKiAkZ3JpZC1zaXplLCAkY29sb3ItYmFja2dyb3VuZCwgdXApO1xuICB9XG59XG5cbkBtaXhpbiBxdWV1ZSB7XG5cbiAgLm10LXF1ZXVlIHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcblxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjsgLy8gbmVlZGVkIGJ5IEZGIHNvbWV0aW1lc1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWRhcmtlcjtcbiAgfVxuXG4gIC5tdC1xdWV1ZV9fZW50cnkge1xuICAgIEBpbmNsdWRlIHF1ZXVlLWl0ZW0tY29sb3IoJGNvbG9yLXByaW1hcnkpO1xuXG4gICAgJi5hY3RpdmUge1xuICAgICAgQGluY2x1ZGUgcXVldWUtaXRlbS1jb2xvcigkY29sb3ItYWNjZW50KTtcbiAgICB9XG5cbiAgICAmLmJyb2tlbiB7XG4gICAgICBAaW5jbHVkZSBxdWV1ZS1pdGVtLWNvbG9yKCRjb2xvci1hY2NlbnQtZXJyb3IpO1xuICAgIH1cbiAgfVxuXG4gIC5tdC1xdWV1ZV9fZW50cnlfX3RodW1ibmFpbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgPiAuaW1hZ2Uge1xuICAgICAgJGhlaWdodC1lbnRyaWVzLXRodW1ibmFpbHMtZml4ZWQ6IDE2ICogJGdyaWQtc2l6ZTtcbiAgICAgIC8vIGtlZXAgdGhlIHJhdGlvIG9mIHRoZSBmaXhlZCBtb2RlIGV2ZW4gaW4gZmxleGlibGUgbW9kZVxuICAgICAgJHJhdGlvLWVudHJpZXMtdGh1bWJuYWlsczogMTAwJSAgKiAkaGVpZ2h0LWVudHJpZXMtdGh1bWJuYWlscy1maXhlZCAvICR3aWR0aC10aHVtYm5haWwtb3JpZ2luYWw7XG5cbiAgICAgIHBhZGRpbmctdG9wOiAkcmF0aW8tZW50cmllcy10aHVtYm5haWxzO1xuXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgZmlsdGVyOiBzYXR1cmF0ZSg1JSk7XG5cbiAgICAgIEBpbmNsdWRlIG10LWhvcml6b250YWwtc2NyZWVuKCkge1xuICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgICAgaGVpZ2h0OiAkaGVpZ2h0LWVudHJpZXMtdGh1bWJuYWlscy1maXhlZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAubXQtcXVldWVfX2VudHJ5LmFjdGl2ZSAmIHtcbiAgICAgID4gLmltYWdlIHtcbiAgICAgICAgZmlsdGVyOiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tdC1xdWV1ZV9fZW50cnlfX2Jyb2tlbi1tZXNzYWdlIHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcblxuICAgIGRpc3BsYXk6IG5vbmU7IC8vIGhpZGRlbiBieSBkZWZhdWx0XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvci1hY2NlbnQtZXJyb3IsICRvcGFjaXR5LXJhdGlvLW92ZXJsYXkpO1xuXG4gICAgLm10LXF1ZXVlX19lbnRyeS5icm9rZW4gJiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cbiAgfVxuXG4gIC5tdC1xdWV1ZV9fZW50cnlfX3NwaW5uZXItY29udGFpbmVyIHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIC5tdC1xdWV1ZV9fZW50cnlfX3NwaW5uZXIge1xuICAgIHdpZHRoOiA4ICogJGdyaWQtc2l6ZTtcblxuICAgIGNvbG9yOiAkY29sb3ItYWNjZW50O1xuICB9XG5cbiAgLm10LXF1ZXVlX19lbnRyeV9fZGF0YSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvLyBsZXRzIHNob3cgdGhlIHRyaWFuZ2xlXG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLm10LXF1ZXVlX19lbnRyeV9fdGl0bGUge1xuICAgIGZsZXg6IDE7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgcGFkZGluZzogMCAyICogJGdyaWQtc2l6ZTtcbiAgICBtYXJnaW46IDEuNSAqICRncmlkLXNpemUgMDtcbiAgfVxuXG4gIC5tdC1xdWV1ZV9fZW50cnlfX2NvbW1hbmRzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICAubXQtcXVldWVfX2VudHJ5X19yZW1vdmUtYnV0dG9uIHtcbiAgICBAaW5jbHVkZSBtdC1jbGljay1yZWFjdGlvbigpO1xuICAgIHBhZGRpbmctcmlnaHQ6ICRncmlkLXNpemU7XG4gICAgb3BhY2l0eTogLjI7XG4gICAgLy8gZml4ZXMgYSBDaHJvbWUgYnVnIHdoZXJlIG9wYWNpdHkgZ2V0cyBzdHVjayB0byAxIGFmdGVyIGhvdmVyXG4gICAgd2lsbC1jaGFuZ2U6IG9wYWNpdHk7XG5cbiAgICAvLyBjZW50ZXIgdGhlIGljb25cbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgQG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKSB7XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCJAbWl4aW4gdHJpYW5nbGUoJHNpemUsICRjb2xvciwgJGRpcmVjdGlvbikge1xuICAkd2lkdGg6IG50aCgkc2l6ZSwgMSk7XG4gICRoZWlnaHQ6IG50aCgkc2l6ZSwgbGVuZ3RoKCRzaXplKSk7XG4gICRmb3JlZ3JvdW5kLWNvbG9yOiBudGgoJGNvbG9yLCAxKTtcbiAgJGJhY2tncm91bmQtY29sb3I6IGlmKGxlbmd0aCgkY29sb3IpID09IDIsIG50aCgkY29sb3IsIDIpLCB0cmFuc3BhcmVudCk7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG5cbiAgQGlmICgkZGlyZWN0aW9uID09IHVwKSBvciAoJGRpcmVjdGlvbiA9PSBkb3duKSBvciAoJGRpcmVjdGlvbiA9PSByaWdodCkgb3IgKCRkaXJlY3Rpb24gPT0gbGVmdCkge1xuICAgICR3aWR0aDogJHdpZHRoIC8gMjtcbiAgICAkaGVpZ2h0OiBpZihsZW5ndGgoJHNpemUpID4gMSwgJGhlaWdodCwgJGhlaWdodC8yKTtcblxuICAgIEBpZiAkZGlyZWN0aW9uID09IHVwIHtcbiAgICAgIGJvcmRlci1ib3R0b206ICRoZWlnaHQgc29saWQgJGZvcmVncm91bmQtY29sb3I7XG4gICAgICBib3JkZXItbGVmdDogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XG4gICAgfSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IHJpZ2h0IHtcbiAgICAgIGJvcmRlci1ib3R0b206ICR3aWR0aCBzb2xpZCAkYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgIGJvcmRlci1sZWZ0OiAkaGVpZ2h0IHNvbGlkICRmb3JlZ3JvdW5kLWNvbG9yO1xuICAgICAgYm9yZGVyLXRvcDogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xuICAgIH0gQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSBkb3duIHtcbiAgICAgIGJvcmRlci1sZWZ0OiAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XG4gICAgICBib3JkZXItcmlnaHQ6ICR3aWR0aCBzb2xpZCAkYmFja2dyb3VuZC1jb2xvcjtcbiAgICAgIGJvcmRlci10b3A6ICRoZWlnaHQgc29saWQgJGZvcmVncm91bmQtY29sb3I7XG4gICAgfSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IGxlZnQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAkaGVpZ2h0IHNvbGlkICRmb3JlZ3JvdW5kLWNvbG9yO1xuICAgICAgYm9yZGVyLXRvcDogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xuICAgIH1cbiAgfSBAZWxzZSBpZiAoJGRpcmVjdGlvbiA9PSB1cC1yaWdodCkgb3IgKCRkaXJlY3Rpb24gPT0gdXAtbGVmdCkge1xuICAgIGJvcmRlci10b3A6ICRoZWlnaHQgc29saWQgJGZvcmVncm91bmQtY29sb3I7XG5cbiAgICBAaWYgJGRpcmVjdGlvbiA9PSB1cC1yaWdodCB7XG4gICAgICBib3JkZXItbGVmdDogICR3aWR0aCBzb2xpZCAkYmFja2dyb3VuZC1jb2xvcjtcbiAgICB9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gdXAtbGVmdCB7XG4gICAgICBib3JkZXItcmlnaHQ6ICR3aWR0aCBzb2xpZCAkYmFja2dyb3VuZC1jb2xvcjtcbiAgICB9XG4gIH0gQGVsc2UgaWYgKCRkaXJlY3Rpb24gPT0gZG93bi1yaWdodCkgb3IgKCRkaXJlY3Rpb24gPT0gZG93bi1sZWZ0KSB7XG4gICAgYm9yZGVyLWJvdHRvbTogJGhlaWdodCBzb2xpZCAkZm9yZWdyb3VuZC1jb2xvcjtcblxuICAgIEBpZiAkZGlyZWN0aW9uID09IGRvd24tcmlnaHQge1xuICAgICAgYm9yZGVyLWxlZnQ6ICAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XG4gICAgfSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IGRvd24tbGVmdCB7XG4gICAgICBib3JkZXItcmlnaHQ6ICR3aWR0aCBzb2xpZCAkYmFja2dyb3VuZC1jb2xvcjtcbiAgICB9XG4gIH0gQGVsc2UgaWYgKCRkaXJlY3Rpb24gPT0gaW5zZXQtdXApIHtcbiAgICBib3JkZXItY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG9yICRiYWNrZ3JvdW5kLWNvbG9yICRmb3JlZ3JvdW5kLWNvbG9yO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXdpZHRoOiAkaGVpZ2h0ICR3aWR0aDtcbiAgfSBAZWxzZSBpZiAoJGRpcmVjdGlvbiA9PSBpbnNldC1kb3duKSB7XG4gICAgYm9yZGVyLWNvbG9yOiAkZm9yZWdyb3VuZC1jb2xvciAkYmFja2dyb3VuZC1jb2xvciAkYmFja2dyb3VuZC1jb2xvcjtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci13aWR0aDogJGhlaWdodCAkd2lkdGg7XG4gIH0gQGVsc2UgaWYgKCRkaXJlY3Rpb24gPT0gaW5zZXQtcmlnaHQpIHtcbiAgICBib3JkZXItY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG9yICRiYWNrZ3JvdW5kLWNvbG9yICRiYWNrZ3JvdW5kLWNvbG9yICRmb3JlZ3JvdW5kLWNvbG9yO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXdpZHRoOiAkd2lkdGggJGhlaWdodDtcbiAgfSBAZWxzZSBpZiAoJGRpcmVjdGlvbiA9PSBpbnNldC1sZWZ0KSB7XG4gICAgYm9yZGVyLWNvbG9yOiAkYmFja2dyb3VuZC1jb2xvciAkZm9yZWdyb3VuZC1jb2xvciAkYmFja2dyb3VuZC1jb2xvciAkYmFja2dyb3VuZC1jb2xvcjtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci13aWR0aDogJHdpZHRoICRoZWlnaHQ7XG4gIH1cbn1cbiIsIkBpbXBvcnQgJ2JvdXJib24nO1xuXG5AaW1wb3J0ICd2YXJpYWJsZXMnO1xuQGltcG9ydCAndXRpbHMnO1xuXG5AbWl4aW4gc2VhcmNoIHtcblxuICAubXQtc2VhcmNoIHtcbiAgICBAaW5jbHVkZSBwb3NpdGlvbihhYnNvbHV0ZSwgMHB4IDBweCAwcHggMHB4KTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yLWxpZ2h0ZXIsIC44KTtcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIH1cblxuICAubXQtc2VhcmNoX19wcm92aWRlcl9faGVhZGVyIHtcbiAgICBwYWRkaW5nOiAwICRncmlkLXNpemU7XG4gICAgbWFyZ2luOiAyICogJGdyaWQtc2l6ZSAwO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbiAgLm10LXNlYXJjaF9fcHJvdmlkZXJfX2hlYWRlcl9fc3Bpbm5lciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGhlaWdodDogMiAqICRncmlkLXNpemU7XG4gICAgd2lkdGg6IDIgKiAkZ3JpZC1zaXplO1xuICAgIG1hcmdpbi1sZWZ0OiAkZ3JpZC1zaXplO1xuICB9XG5cbiAgLm10LXNlYXJjaF9fbWVzc2FnZSB7XG4gICAgcGFkZGluZzogMCAkZ3JpZC1zaXplO1xuICB9XG5cbiAgLm10LXNlYXJjaF9fbWVzc2FnZV9fcGFkZGluZyB7XG4gICAgcGFkZGluZy1ib3R0b206IDIgKiAkZ3JpZC1zaXplO1xuICB9XG5cbiAgLm10LXJlc3VsdHMge1xuICAgIHBhZGRpbmctbGVmdDogJGdyaWQtc2l6ZTtcbiAgfVxuXG4gIC8vIHdlIGZpbGwgdGhlIGNvbnRlbnQgb2YgYW4gaGlkZGVuIGVsZW1lbnQgd2l0aCB0aGUgbGF5b3V0IGluZm9ybWF0aW9uXG4gIC8vIGl0IHdpbGwgYmUgcmVhZCBvbiB0aGUgSlMgc2lkZSB0byBxdWVyeSB0aGUgcHJvcGVyIGFtb3VudCBvZiBpdGVtc1xuICAubXQtanMtcmVzdWx0czpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY29udGVudDogJ3tcInByb21vdGVkQ291bnRcIjogMSwgXCJyZWd1bGFyQ291bnRcIjogMX0nO1xuICB9XG5cbiAgLm10LXJlc3VsdCB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogJGdyaWQtc2l6ZTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAkZ3JpZC1zaXplO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5tdC1yZXN1bHRfX2NvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuXG4gICAgdGV4dC1hbGlnbjogaW5oZXJpdDtcbiAgfVxuXG4gIEBpbmNsdWRlIG10LXJlc3VsdC1icmVha3BvaW50KDEsIDEsICR3aWR0aC1xdWV1ZS10aWxlKTtcbiAgQGluY2x1ZGUgbXQtcmVzdWx0LWJyZWFrcG9pbnQoMiwgMywgJHdpZHRoLXF1ZXVlLXRpbGUpO1xuICBAaW5jbHVkZSBtdC1yZXN1bHQtYnJlYWtwb2ludCgzLCA0LCAkd2lkdGgtcXVldWUtdGlsZSk7XG4gIEBpbmNsdWRlIG10LXJlc3VsdC1icmVha3BvaW50KDQsIDYsICR3aWR0aC1xdWV1ZS10aWxlKTtcbiAgQGluY2x1ZGUgbXQtcmVzdWx0LWJyZWFrcG9pbnQoNSwgNywgJHdpZHRoLXF1ZXVlLXRpbGUpO1xuXG4gIC5tdC1yZXN1bHRfX3RodW1ibmFpbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgcGFkZGluZy10b3A6ICRyYXRpby10aHVtYm5haWw7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcHJpbWFyeTtcblxuICAgIC8vIHRleHQgcHJvdGVjdGlvblxuICAgICY6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAkaGVpZ2h0LXRodW1ibmFpbC1vcmlnaW5hbCAvIDQgMHB4IDBweCAwcHgpO1xuXG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCBoc2xhKDAsIDAlLCAwJSwgMCkgMCUsIGhzbGEoMCwgMCUsIDAlLCAwLjcpIDcwJSwgaHNsYSgwLCAwJSwgMCUsIDAuNykgMTAwJSk7XG4gICAgfVxuICB9XG5cbiAgLm10LXJlc3VsdF9fdGh1bWJuYWlsX19pbWcge1xuXG4gICAgQGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsIDBweCAwcHggMHB4IDBweCk7XG5cbiAgICAubXQtc21hcnQtaW1nX19pbWFnZSB7XG4gICAgICBmaWx0ZXI6IHNhdHVyYXRlKDEwMCUpO1xuXG4gICAgICAmLm10LWxvYWRpbmcge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICBmaWx0ZXI6IHNhdHVyYXRlKDApO1xuICAgICAgfVxuXG4gICAgICAmLm10LWxvYWRpbmctcmVtb3ZlIHtcbiAgICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgZmlsdGVyO1xuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbiAqIDUsICR0cmFuc2l0aW9uLWR1cmF0aW9uICogMTA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmxvYWRpbmctaW5kaWNhdG9yIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBjb2xvcjogJGNvbG9yLXRleHQtc2Vjb25kYXJ5O1xuICAgIH1cbiAgfVxuXG4gIC5tdC1yZXN1bHRfX2FkZGVkLWNvbmZpcm1hdGlvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogMjtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApOyAvLyB1IGUgM0QgaGVyZSB0byBhdm9pZCBhbmltYXRpb24gZmxpY2tlcmluZyBpbiB3ZWJraXRcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1wcmltYXJ5O1xuXG4gICAgLy8gdmVydGljYWxseSBjZW50ZXIgdGhlIHRleHRcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICA+IC50ZXh0IHtcbiAgICAgIHBhZGRpbmc6ICRncmlkLXNpemU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgIC8vIGEgdmVyeSBcImNoZWFwXCIgZWxlbWVudCBxdWVyeSB0byBkaXNwbGF5IGEgc2hvcnRlciBjb25maXJtYXRpb24gbWVzc2FnZSBvbiBsYXJnZXIgc2NyZWVuIHdoZW4gdGhlIHNlYXJjaCByZXN1bHQgc2NyZWVuXG4gICAgICAvLyBpcyBtYWRlIG9mIDUgY29sdW1ucyB3aGljaCBkb2Vzbid0IGdpdmUgbXVjaCBwbGFjZSB0byB0aGUgbWVzc2FnZVxuICAgICAgQGluY2x1ZGUgbXQtaG9yaXpvbnRhbC1zY3JlZW4oKSB7XG5cbiAgICAgICAgZm9udDogJGZvbnQtc21hbGxlcjtcblxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogYXR0cihtdC1zaG9ydC10ZXh0KTtcbiAgICAgICAgfVxuXG4gICAgICAgID4gLm10LXJlcGxhY2VkLXRleHQge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLm10LXJlc3VsdF9fYWRkZWQtY29uZmlybWF0aW9uX19hbmltYXRpb24taWYge1xuXG4gICAgICAmLm5nLWVudGVyLCAmLm5nLWxlYXZlIHtcbiAgICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtLCBvcGFjaXR5O1xuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbjtcbiAgICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246ICR0aW1pbmctZnVuY3Rpb24tZWFzZS1pbi1vdXQsIGxpbmVhcjtcbiAgICAgIH1cblxuICAgICAgJi5uZy1lbnRlciwgJi5uZy1sZWF2ZS5uZy1sZWF2ZS1hY3RpdmUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICB9XG5cbiAgICAgICYubmctbGVhdmUsICYubmctZW50ZXIubmctZW50ZXItYWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAubXQtcmVzdWx0X19kYXRhIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDIgKiAkZ3JpZC1zaXplO1xuXG4gICAgLy9iYWNrZ3JvdW5kOiByZ2JhKCRjb2xvci1iYWNrZ3JvdW5kLCAuMyk7XG4gIH1cblxuICAubXQtcmVzdWx0X19kYXRhX19pdGVtIHtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG4gICAgJi5oZWFkIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG4gICAgfVxuICB9XG5cbiAgLm10LXJlc3VsdF9fZGF0YV9fdGl0bGUge1xuICAgIGZsZXg6IDE7XG5cbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBmb250OiAkZm9udC1zbWFsbGVyO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIH1cblxuICAubXQtcmVzdWx0X19kYXRhX19wdWJsaXNoZXIge1xuICAgIGZvbnQ6ICRmb250LXNtYWxsZXI7XG4gIH1cblxuICAubXQtcmVzdWx0X19kYXRhX19kdXJhdGlvbiB7XG4gICAgd2lkdGg6IDZjaDsgLy8gYmFzZWQgb24gdGhlIGlkZWEgdGhhdCB0aGUgd2lkZXN0IHZhbHVlIHdvdWxkIGJlIDAwMDowMFxuICAgIGZvbnQ6ICRmb250LXNtYWxsZXI7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cblxuICAubXQtc2VhcmNoX19zaG93LW1vcmUge1xuICAgIHBhZGRpbmc6IDAgJGdyaWQtc2l6ZTtcbiAgICBtYXJnaW4tYm90dG9tOiAkZ3JpZC1zaXplO1xuXG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIEBpbmNsdWRlIG10LWhvcml6b250YWwtc2NyZWVuKCkge1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICB9XG4gIH1cblxuICAubXQtc2VhcmNoX19zaG93LW1vcmVfX2J1dHRvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWRhcmtlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMCAkZ3JpZC1zaXplO1xuICAgIGxpbmUtaGVpZ2h0OiA1ICogJGdyaWQtc2l6ZTtcblxuICAgIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgIEBpbmNsdWRlIG10LWhvcml6b250YWwtc2NyZWVuKCkge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxuXG4gICAgQG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKSB7XG4gICAgICAmOmhvdmVyIC50ZXh0IHtcbiAgICAgICAgY29sb3I6ICRjb2xvci1hY2NlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm10LXNlYXJjaF9fc2hvdy1tb3JlX19idXR0b25fX2xhYmVsIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICBwYWRkaW5nOiAwIDMgKiAkZ3JpZC1zaXplO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgLmxvYWRlciB7XG4gICAgICB3aWR0aDogMDtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIH1cbiAgfVxuXG4gIC5tdC1zZWFyY2hfX3Nob3ctbW9yZV9fc3Bpbm5lciB7XG4gICAgd2lkdGg6IDIgKiAkZ3JpZC1zaXplO1xuICAgIGhlaWdodDogMiAqICRncmlkLXNpemU7XG4gICAgbWFyZ2luLWxlZnQ6ICRncmlkLXNpemU7XG4gIH1cbn1cblxuLy8gaGVscGVyIHRvIHNldCB0aGUgbWVkaWEgcXVlcmllcyBicmVha3BvaW50cyB0byBoYXZlIGEgbmljZSByZXN1bHRzIGdyaWRcbi8vIGlkZWFsbHkgd2Ugd291bGQgaGF2ZSBlbGVtZW50IHF1ZXJ5IG9uIHRoZSByZXN1bHQgcGFuZWwgYnV0IGl0IGRvZXNuJ3QgZXhpc3QgeWV0IHNvIHdlIG5lZWQgdG8gXCJzdGF0aWNhbGx5XCJcbi8vIGNhbGN1bGF0ZSB0aGUgcmVtYWluaW5nIHNwYWNlXG5AbWl4aW4gbXQtcmVzdWx0LWJyZWFrcG9pbnQoJHByb21vdGVkLWNvdW50LCAkcmVndWxhci1jb3VudCwgJHdpZHRoLW9mZnNldCkge1xuXG4gIC8vIHRoZSBpZGVhIGlzIHRvIG1ha2Ugc3VyZSB3ZSBuZXZlciBleHBhbmQgdGhlIGd1dHRlciBiZXR3ZWVuIHRoZSBwcm9tb3RlZCByZXN1bHRcbiAgJHdpZHRoLWJyZWFrcG9pbnQ6ICR3aWR0aC1vZmZzZXQgKyAkcHJvbW90ZWQtY291bnQgKiAkZ3JpZC1zaXplICsgKCRwcm9tb3RlZC1jb3VudCAtIDEpICogJHdpZHRoLXRodW1ibmFpbC1vcmlnaW5hbDtcblxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBtYXgoJHdpZHRoLWJyZWFrcG9pbnQsICR3aWR0aC1icmVha3BvaW50LXNpbmdsZS1jb2x1bW4tbGF5b3V0KSkge1xuXG4gICAgLm10LWpzLXJlc3VsdHM6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICd7XCJwcm9tb3RlZENvdW50XCI6ICN7JHByb21vdGVkLWNvdW50fSwgXCJyZWd1bGFyQ291bnRcIjogI3skcmVndWxhci1jb3VudH19JztcbiAgICB9XG5cbiAgICAubXQtcmVzdWx0IHtcbiAgICAgIHdpZHRoOiAxMDAlIC8gJHJlZ3VsYXItY291bnQ7XG4gICAgfVxuXG4gICAgLm10LXJlc3VsdF9fY29udGFpbmVyIHtcbiAgICAgIG1heC13aWR0aDogJHdpZHRoLXRodW1ibmFpbC1vcmlnaW5hbDtcbiAgICB9XG5cbiAgICAubXQtcmVzdWx0X190aHVtYm5haWwge1xuICAgICAgaGVpZ2h0OiAkaGVpZ2h0LXRodW1ibmFpbC1vcmlnaW5hbDtcbiAgICAgIHBhZGRpbmctdG9wOiAwOyAvLyBzdG9wcyB0aGUgZmx1aWQgaGVpZ2h0IGJlaGF2aW9yIG9mIHRoZSB0aHVtYm5haWxcbiAgICB9XG5cbiAgICAvLyB0aGUgZmlyc3QgdGhyZWUgY2hpbGRyZW4gb2YgdGhlIGZpcnN0IHBhZ2UgYXJlIFwicHJvbW90ZWRcIlxuICAgIC5tdC1yZXN1bHRzX19wYWdlOmZpcnN0LWNoaWxkIC5tdC1yZXN1bHQ6bnRoLWNoaWxkKC1uICsgI3skcHJvbW90ZWQtY291bnR9KSB7XG4gICAgICB3aWR0aDogMTAwJSAvICAkcHJvbW90ZWQtY291bnQ7XG4gICAgfVxuICB9XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
